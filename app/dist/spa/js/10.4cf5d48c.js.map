{"version":3,"sources":["webpack:///./src/components/BtnToggleGrid.vue?f82a","webpack:///./src/components/BtnToggleGrid.vue?c055","webpack:///src/components/BtnToggleGrid.vue","webpack:///./src/components/BtnToggleGrid.vue","webpack:///./src/pages/SelectCrop.vue?bef7","webpack:///./src/pages/SelectCrop.vue?7e7d","webpack:///src/pages/SelectCrop.vue","webpack:///./src/pages/SelectCrop.vue","webpack:///./src/store/mapBind.js"],"names":["component","_vm","this","_h","$createElement","_c","_self","class","containerClassObject","_l","item","key","_id","value","activeClass","style","margin","space","attrs","on","$event","$emit","size","icon","width","height","imageBaseURL","image","_e","fontSize","_v","_s","text","QBtn","QIcon","QImg","staticClass","maxHeight","flex","overflowY","boxShadow","cropFilter","btnSize","model","callback","$$v","cropFilterSelected","expression","flexShrink","crop","btnSpace","handleCropSelect","cropSelected","QPage","mapBind","base","params","map","mapState","result","Object","entries","get","set","val","mutationName","string","charAt","toUpperCase","slice","$store","commit"],"mappings":"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","file":"js/10.4cf5d48c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.containerClassObject},_vm._l((_vm.options),function(item){return _c('q-btn',{key:item._id,class:item._id === _vm.value._id ? _vm.activeClass : '',style:({ margin: _vm.space}),attrs:{\"stack\":\"\",\"title\":item._id},on:{\"click\":function($event){_vm.$emit('input', item); _vm.$emit('click', $event)}}},[(item.icon)?_c('q-icon',{attrs:{\"size\":_vm.size,\"name\":item.icon}}):(item.image)?_c('q-img',{style:({width: _vm.size, height: _vm.size}),attrs:{\"src\":_vm.imageBaseURL + item.image,\"contain\":\"\"}}):_vm._e(),_c('div',{style:({ 'font-size': _vm.fontSize, 'line-height':'100%' })},[_vm._v(\"\\n            \"+_vm._s(item.text)+\"\\n        \")])],1)}),1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BtnToggleGrid.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BtnToggleGrid.vue?vue&type=script&lang=js&\"","<template>\n    <div :class=\"containerClassObject\">\n        <!-- style=\"\n            display: flex;\n            flex-direction: column;\n            flex-wrap: nowrap;\n            justify-content: flex-start;\n            align-content: stretch;\n            align-items: center;\n            \" -->\n        <!-- <div class=\"shadow-10\">\n            _id {{ _id }} <br>\n            options {{ options }} <br>\n            activeClass {{ activeClass }} <br>\n        </div> -->\n        <q-btn\n            v-for=\"item in options\"\n            :key=\"item._id\"\n            @click=\"$emit('input', item); $emit('click', $event)\"\n            :class=\"item._id === value._id ? activeClass : ''\"\n            stack\n            :title=\"item._id\"\n            :style=\"{ margin: space}\"\n        >\n            <q-icon\n                v-if=\"item.icon\"\n                :size=\"size\"\n                :name=\"item.icon\"\n            />\n            <q-img\n                v-else-if=\"item.image\"\n                :src=\"imageBaseURL + item.image\"\n                :style=\"{width: size, height: size}\"\n                contain\n            />\n            <div\n                :style=\"{ 'font-size': fontSize, 'line-height':'100%' }\"\n            >\n                {{ item.text }}\n            </div>\n        </q-btn>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'BtnToggleGrid',\n    data () {\n        return {\n        }\n    },\n    methods: {\n        //\n    },\n    computed: {\n        containerClassObject: function () {\n            return [\n                { column: this.vertical },\n                { row: !this.vertical },\n                'wrap',\n                // 'justify-around',\n                'content-start',\n                'items-center'\n            ]\n        }\n    },\n    props: {\n        value: {\n            type: Object,\n            required: false,\n            default: () => { return undefined }\n        },\n        options: {\n            type: Array,\n            required: false,\n            default: () => { return [] }\n        },\n        // key: {\n        //     this does not work :-(\n        //     as iam not aible to use this in the template..\n        //     type: String,\n        //     required: '_id'\n        // },\n        imageBaseURL: {\n            type: String,\n            required: false,\n            default: 'http://localhost:3030/api/'\n        },\n        size: {\n            type: String,\n            required: false,\n            default: '30mm'\n        },\n        space: {\n            type: String,\n            required: false,\n            default: '5mm'\n        },\n        fontSize: {\n            type: String,\n            required: false,\n            default: '1em'\n        },\n        activeClass: {\n            type: String,\n            required: false,\n            default: 'text-orange'\n        },\n        vertical: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n        // showImage: {\n        //     type: Boolean,\n        //     required: false,\n        //     default: true\n        // }\n    }\n}\n</script>\n","import { render, staticRenderFns } from \"./BtnToggleGrid.vue?vue&type=template&id=3fd99906&\"\nimport script from \"./BtnToggleGrid.vue?vue&type=script&lang=js&\"\nexport * from \"./BtnToggleGrid.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QBtn,QIcon,QImg});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',{staticClass:\"fit\"},[_c('section',{staticClass:\"row no-wrap\",style:({\n                maxHeight:'100vh',\n            })},[_c('btn-toggle-grid',{staticClass:\"justify-start no-wrap col-auto\",style:({\n                    flex:'column',\n                    overflowY:'auto',\n                    height:'100vh',\n                    boxShadow:\"\\n                        0 0 5px -6px hsla(0, 0%, 0%, 1.0),\\n                        0 0 10px 2px hsla(0, 0%, 0%, 0.5),\\n                        0 0 15px 6px hsla(0, 0%, 0%, 0.5)\\n                    \",\n                    'background-color':'hsla(0, 0%, 100%, 0.1)',\n                }),attrs:{\"vertical\":\"\",\"options\":_vm.cropFilter,\"active-class\":\"bg-orange\",\"push\":\"\",\"rounded\":\"\",\"stack\":\"\",\"size\":_vm.btnSize/1.0 + 'mm',\"fontSize\":\"1.2em\",\"space\":0 + 'mm'},model:{value:(_vm.cropFilterSelected),callback:function ($$v) {_vm.cropFilterSelected=$$v},expression:\"cropFilterSelected\"}}),_c('btn-toggle-grid',{staticClass:\"col-grow justify-around\",style:({\n                    flex:'column',\n                    flexShrink:1,\n                    overflowY:'auto',\n                    maxHeight:'100vh',\n                }),attrs:{\"options\":_vm.crop,\"active-class\":\"bg-orange\",\"push\":\"\",\"rounded\":\"\",\"stack\":\"\",\"size\":_vm.btnSize + 'mm',\"fontSize\":\"1.5em\",\"space\":_vm.btnSpace + 'mm'},on:{\"click\":_vm.handleCropSelect},model:{value:(_vm.cropSelected),callback:function ($$v) {_vm.cropSelected=$$v},expression:\"cropSelected\"}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectCrop.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectCrop.vue?vue&type=script&lang=js&\"","<template>\n    <q-page class=\"fit\">\n        <!-- <debugSection label=\"crop\" :obj=\"crop\"/> -->\n        <!-- <debugSection label=\"btnSizeUnit\" :obj=\"btnSizeUnit\"/> -->\n        <section\n            class=\"row no-wrap\"\n            :style=\"{\n                maxHeight:'100vh',\n            }\"\n        >\n            <!-- <section>\n                <debugSection label=\"cropFilterSelected\" :obj=\"cropFilterSelected\"/>\n                <debugSection label=\"cropParams\" :obj=\"cropParams\"/>\n                <debugSection label=\"xXcropParams\" :obj=\"xXcropParams\"/>\n                <debugSection label=\"crop\" :obj=\"crop\" style=\"font-size:0.5em\"/>\n            </section> -->\n            <btn-toggle-grid\n                :style=\"{\n                    flex:'column',\n                    overflowY:'auto',\n                    height:'100vh',\n                    boxShadow:`\n                        0 0 5px -6px hsla(0, 0%, 0%, 1.0),\n                        0 0 10px 2px hsla(0, 0%, 0%, 0.5),\n                        0 0 15px 6px hsla(0, 0%, 0%, 0.5)\n                    `,\n                    'background-color':'hsla(0, 0%, 100%, 0.1)',\n                }\"\n                class=\"justify-start no-wrap col-auto\"\n                vertical\n                v-model=\"cropFilterSelected\"\n                :options=\"cropFilter\"\n                active-class=\"bg-orange\"\n                push\n                rounded\n                stack\n                :size=\"btnSize/1.0 + 'mm'\"\n                fontSize=\"1.2em\"\n                :space=\"0 + 'mm'\"\n            />\n            <btn-toggle-grid\n                class=\"col-grow justify-around\"\n                :style=\"{\n                    flex:'column',\n                    flexShrink:1,\n                    overflowY:'auto',\n                    maxHeight:'100vh',\n                }\"\n                v-model=\"cropSelected\"\n                :options=\"crop\"\n                active-class=\"bg-orange\"\n                push\n                rounded\n                stack\n                :size=\"btnSize + 'mm'\"\n                fontSize=\"1.5em\"\n                :space=\"btnSpace + 'mm'\"\n                @click=\"handleCropSelect\"\n            />\n        </section>\n</q-page>\n</template>\n\n<script>\n// import {\n//     // mapState,\n//     // mapGetters,\n//     // mapActions\n// } from 'vuex'\nimport {\n    // useFind,\n    // useGet,\n    makeFindMixin\n} from 'feathers-vuex'\nimport { mapBind } from '../store/mapBind.js'\n// import DebugSection from 'components/debugSection'\nimport BtnToggleGrid from 'components/BtnToggleGrid.vue'\n\nexport default {\n    name: 'PageSelectCrop',\n    data () {\n        return {\n            test: 'car'\n        }\n    },\n    filters: {\n    },\n    methods: {\n        handleCropSelect: function () {\n            if (this.cropSelected) {\n                // update lastUsed timestamp\n                // const data = {\n                //     lastUsed: new Date()\n                // }\n                // this.cropSelected.patch(data)\n                this.cropSelected.patch()\n                // give a short delay so the selection of the button is visible\n                setTimeout(() => {\n                    // handle routing\n                    if (this.cropSelected.placesCount() > 1) {\n                        // console.log('select_place')\n                        this.placeSelected = {}\n                        this.$router.push('select_place')\n                    } else {\n                        const crop = this.cropSelected\n                        // console.log('crop.placesList', crop.placesList())\n                        // console.log('crop.placesList[0]', crop.placesList()[0])\n                        if (crop.placesList()[0]) {\n                            this.placeSelected = crop.placesList()[0]\n                        } else {\n                            this.placeSelected = {}\n                        }\n                        this.$router.push('save_harvest')\n                    }\n                }, 200)\n            }\n        }\n    },\n    computed: {\n        ...mapBind('localconfig', [\n            'btnSize',\n            'btnSpace',\n            'cropSelected',\n            'cropFilterSelected',\n            'placeSelected'\n        ]),\n        cropParams () {\n            // default query = list all\n            const result = {\n                query: {\n                    $sort: {\n                        _id: 1\n                    }\n                }\n            }\n            const filter = this.cropFilterSelected\n            if (filter && filter.getQueryFixed) {\n                result.query = filter.getQueryFixed()\n            }\n            return result\n        },\n        cropFilterParams () {\n            return {\n                query: {\n                    $sort: {\n                        _id: 1\n                    }\n                }\n            }\n        }\n    },\n    mixins: [\n        makeFindMixin({ service: 'crop' }),\n        makeFindMixin({ service: 'crop-filter' })\n    ],\n    components: {\n        // DebugSection,\n        BtnToggleGrid\n    }\n}\n\n</script>\n","import { render, staticRenderFns } from \"./SelectCrop.vue?vue&type=template&id=7180e43a&\"\nimport script from \"./SelectCrop.vue?vue&type=script&lang=js&\"\nexport * from \"./SelectCrop.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QPage});\n","// ------------------------------------------\n// usage:\n// import { mapBind } from 'store/mapBind.js'\n//\n// export default {\n//     name: 'ComponentName',\n//     computed: {\n//         ...mapBind('appconfig', ['globalMessage', 'someOtherThing'])\n//     },\n// }\n\n// inspired by https://stackoverflow.com/a/48447361/574981\n\nimport { mapState } from 'vuex'\n\n// export const mapBind = (base, params = {}) => (\n// export const mapBind = (base, params) => (\nexport const mapBind = function (base, params) {\n    // helper function for vuex\n    // create setter and getter functions for given store and properties\n    function capitalizeFirstLetter (string) {\n        // https://stackoverflow.com/questions/1026069/how-do-i-make-the-first-letter-of-a-string-uppercase-in-javascript\n        return string.charAt(0).toUpperCase() + string.slice(1)\n    }\n\n    const map = mapState(base, params)\n    const result = {}\n    // console.log(map)\n    for (const [key, value] of Object.entries(map)) {\n        // console.log('key', key)\n        // console.log('value', value)\n        result[key] = {\n            get: value\n        }\n        result[key].set = function (val) {\n            // this.$store.commit('appconfig/setGlobalMessage', val)\n            const mutationName = 'set' + capitalizeFirstLetter(key)\n            this.$store.commit(base + '/' + mutationName, val)\n        }\n    }\n    // console.log(result)\n    return result\n// )\n}\n"],"sourceRoot":""}