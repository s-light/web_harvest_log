{"version":3,"sources":["webpack:///./src/management_func.js","webpack:///./src/store/mapBind.js","webpack:///./src/pages/Settings.vue?aca7","webpack:///src/components/langSelect.vue","webpack:///./src/components/langSelect.vue?0906","webpack:///./src/components/langSelect.vue","webpack:///./src/components/langSelect.vue?799f","webpack:///./src/pages/Settings.vue?9669","webpack:///src/pages/Settings.vue","webpack:///./src/pages/Settings.vue","webpack:///./src/store/mapBindIDItems.js"],"names":["importAll","this","serverImport","removeAll","removeDB","serverExportToCSV","servicePath","timeframe","console","group","$q","notify","color","message","html","$FeathersVuex","api","Management","serverExportAsCSV","then","response","log","type","catch","error","groupEnd","removeDBFile","serviceStore","servicePath2servicePathName","entry","remove","serverSystemAction","action","resultMessage","result","Array","isArray","resp","stdout","gitPull","respPart","startScaleDemo","$store","dispatch","mapBind","base","params","map","mapState","key","value","Object","entries","get","set","val","mutationName","string","charAt","toUpperCase","slice","commit","appLanguages","component","_vm","_h","$createElement","_self","_c","attrs","langOptions","model","callback","$$v","lang","expression","QSelect","staticClass","_v","_s","$t","staticStyle","dark","isActive","on","$event","toggle","directives","name","rawName","databaseManagementOptionsShow","_e","childrenDebug","path","scopedSlots","_u","fn","ref","href","route","navigate","icon","QPage","QBtn","QToggle","Ripple","decapitalizeFirstLetter","toLowerCase","servicePath2modelClassName","modelParts","split","item","join","mapBindIDItems","entryNames","resultServicePath","resultEntries","modelClassName","ModelClass","models","servicePathName","reactiveBase","Vue","gcList","entryName","find","query","paginate","resultFind","data","id","gcItem","useGet","_id","create","store","gcItemClone","clone","patch","assign"],"mappings":"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","file":"js/8.3e7d95bd.js","sourcesContent":["\nimport { servicePath2servicePathName } from './store/mapBindIDItems.js'\n\nexport function importAll () {\n    this.serverImport('crate')\n    this.serverImport('crop')\n    this.serverImport('crop-filter')\n}\n\nexport function removeAll () {\n    // this.removeDBFile('crate')\n    // this.removeDBFile('crop')\n    // this.removeDBFile('crop-filter')\n    this.removeDB('crate')\n    this.removeDB('crop')\n    this.removeDB('crop-filter')\n}\n\nexport function serverExportToCSV (servicePath, timeframe) {\n    console.group('serverExportToCSV')\n    this.$q.notify({\n        color: 'info',\n        message: `Export ${servicePath} as CSV on server. Processing now.`,\n        html: true\n    })\n    this.$FeathersVuex.api.Management.serverExportAsCSV(servicePath, timeframe)\n        .then(response => {\n            console.log('serverImport: ', response)\n            this.$q.notify({\n                type: 'positive',\n                message: `${servicePath} done.`,\n                html: true\n            })\n        }).catch(error => {\n            console.error('serverImport:', error)\n            this.$q.notify({\n                type: 'negative',\n                message: `${servicePath} loading failed.`,\n                html: true\n            })\n        })\n    console.groupEnd()\n}\n\nexport function serverImport (servicePath) {\n    console.group('serverImport')\n    this.$q.notify({\n        color: 'info',\n        message: `Import ${servicePath} from server. Processing now.`,\n        html: true\n    })\n    this.$FeathersVuex.api.Management.serverImport(servicePath)\n        .then(response => {\n            console.log('serverImport: ', response)\n            this.$q.notify({\n                type: 'positive',\n                message: `${servicePath} done.`,\n                html: true\n            })\n        }).catch(error => {\n            console.error('serverImport:', error)\n            this.$q.notify({\n                type: 'negative',\n                message: `${servicePath} loading failed.`,\n                html: true\n            })\n        })\n    console.groupEnd()\n}\n\nexport function removeDBFile (servicePath) {\n    console.group('removeDBFile')\n    this.$q.notify({\n        color: 'info',\n        message: `remove ${servicePath} db from server. Processing now.`,\n        html: true\n    })\n    this.$FeathersVuex.api.Management.removeDBFile(servicePath)\n        .then(response => {\n            console.log('removeDBFile: ', response)\n            this.$q.notify({\n                type: 'positive',\n                message: `${servicePath} done.`,\n                html: true\n            })\n        }).catch(error => {\n            console.error('removeDBFile:', error)\n            this.$q.notify({\n                type: 'negative',\n                message: `${servicePath} removing failed.`,\n                html: true\n            })\n        })\n    console.groupEnd()\n}\n\nexport function removeDB (servicePath) {\n    console.group('removeDB', servicePath)\n    this.$q.notify({\n        color: 'info',\n        message: `remove all entries from ${servicePath}. Processing now.`,\n        html: true\n    })\n    const servicePathName = servicePath2servicePathName(servicePath)\n    const serviceStore = this.[servicePathName]\n    // console.log(this)\n    console.log('serviceStore', serviceStore)\n    for (var entry of serviceStore) {\n        console.log(entry)\n        entry.remove()\n    }\n    this.$q.notify({\n        type: 'positive',\n        message: `${servicePath} done.`,\n        // timeout: 30500,\n        html: true\n    })\n    console.groupEnd()\n}\n\nexport function serverSystemAction (action) {\n    console.group('serverSystemAction', action)\n    this.$q.notify({\n        color: 'info',\n        message: `initiated server system action '${action}'`,\n        html: true\n    })\n    this.$FeathersVuex.api.Management.serverSystemAction(action)\n        .then(response => {\n            console.log('serverSystemAction: ', response)\n            let resultMessage = ''\n            if (response.result) {\n                if (Array.isArray(response.result)) {\n                    for (const resp of response.result) {\n                        resultMessage += '\\n' + resp.stdout\n                    }\n                } else {\n                    resultMessage = response.result.stdout\n                }\n            }\n            console.log('resultMessage: ', resultMessage)\n            let message = `server system action '${action}' done.`\n            if (resultMessage) {\n                message += `\\n<br> '${resultMessage}'`\n            }\n            this.$q.notify({\n                type: 'positive',\n                message,\n                html: true\n            })\n        }).catch((error) => {\n            console.error('serverSystemAction:\\n', error)\n            // console.log(error.message)\n            this.$q.notify({\n                type: 'negative',\n                message: `'${action}' failed. \\n<br> '${error}'`,\n                html: true\n            })\n        })\n    console.groupEnd()\n}\n\nexport function gitPull () {\n    const action = 'gitPull'\n    console.group(action)\n    this.$q.notify({\n        color: 'info',\n        message: 'pull software updates',\n        html: true\n    })\n    this.$FeathersVuex.api.Management.gitPull()\n        .then(response => {\n            console.log('gitPull: ', response)\n            let resultMessage = ''\n            if (response.result) {\n                if (Array.isArray(response.result)) {\n                    for (const resp of response.result) {\n                        for (const respPart of resp.stdout) {\n                            resultMessage += respPart + '\\n<br>'\n                        }\n                    }\n                    // console.log('resultMessage: ', resultMessage)\n                    // resultMessage = resultMessage.replace('\\n', '\\n<br> ')\n                } else {\n                    resultMessage = response.result.stdout\n                }\n            }\n            console.log('resultMessage: ', resultMessage)\n            let message = `'${action}' successful.`\n            if (resultMessage) {\n                message += `\\n<br> ${resultMessage}`\n            }\n            console.log('message: ', message)\n            this.$q.notify({\n                type: 'positive',\n                message,\n                html: true\n            })\n        }).catch(error => {\n            console.error(action, ': ', error)\n            this.$q.notify({\n                type: 'negative',\n                message: `'${action}' failed. \\n<br> '${error}'`,\n                html: true\n            })\n        })\n    console.groupEnd()\n}\n\nexport function startScaleDemo () {\n    // this.$FeathersVuex.api.Serial\n    // if (!model.demoHandler) {\n    //     model.demoHandler = new ScaleDemoGenerator(model.store)\n    // }\n    // model.demoHandler.start()\n    // model.store.commit('localconfig/setScaleUnit', 'kg')\n    this.$store.dispatch('localconfig/startScaleDemo').then(response => {\n        console.log('startScaleDemo: ', response)\n        this.$q.notify({\n            type: 'positive',\n            message: 'startScaleDemo done.',\n            html: true\n        })\n    }).catch(error => {\n        console.error('startScaleDemo:', error)\n        this.$q.notify({\n            type: 'negative',\n            message: 'startScaleDemo failed.',\n            html: true\n        })\n    })\n}\n","// ------------------------------------------\n// usage:\n// import { mapBind } from 'store/mapBind.js'\n//\n// export default {\n//     name: 'ComponentName',\n//     computed: {\n//         ...mapBind('appconfig', ['globalMessage', 'someOtherThing'])\n//     },\n// }\n\n// inspired by https://stackoverflow.com/a/48447361/574981\n\nimport { mapState } from 'vuex'\n\n// export const mapBind = (base, params = {}) => (\n// export const mapBind = (base, params) => (\nexport const mapBind = function (base, params) {\n    // helper function for vuex\n    // create setter and getter functions for given store and properties\n    function capitalizeFirstLetter (string) {\n        // https://stackoverflow.com/questions/1026069/how-do-i-make-the-first-letter-of-a-string-uppercase-in-javascript\n        return string.charAt(0).toUpperCase() + string.slice(1)\n    }\n\n    const map = mapState(base, params)\n    const result = {}\n    // console.log(map)\n    for (const [key, value] of Object.entries(map)) {\n        // console.log('key', key)\n        // console.log('value', value)\n        result[key] = {\n            get: value\n        }\n        result[key].set = function (val) {\n            // this.$store.commit('appconfig/setGlobalMessage', val)\n            const mutationName = 'set' + capitalizeFirstLetter(key)\n            this.$store.commit(base + '/' + mutationName, val)\n        }\n    }\n    // console.log(result)\n    return result\n// )\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',{staticClass:\"fit column no-wrap justify-center items-center content-center\"},[_c('h1',[_vm._v(_vm._s(_vm.$t('global'))+\" \"+_vm._s(_vm.$t('settings')))]),_c('section',{staticClass:\"text-center\"},[_c('q-btn',{staticClass:\"q-my-md\",staticStyle:{\"margin-right\":\"0\"},attrs:{\"round\":\"\",\"color\":_vm.$q.dark.isActive ? 'blue' : 'black',\"icon\":\"mdi-lightbulb-on-outline\"},on:{\"click\":function($event){return _vm.$q.dark.toggle()}}}),_c('langSelect',{staticClass:\"q-my-md\",staticStyle:{\"min-width\":\"8em\"}})],1),_c('section',[_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('database_harvest_export_csv'),\"icon\":\"mdi-database-export\"},on:{\"click\":function($event){return _vm.serverExportToCSV('harvest', 'current_day')}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('copy_csv_to_usb'),\"icon\":\"mdi-usb-flash-drive\"},on:{\"click\":function($event){return _vm.serverSystemAction('copyCSVtoUSB')}}}),_c('br'),_c('q-toggle',{attrs:{\"size\":\"xl\",\"label\":_vm.$t('database_management_options_show')},model:{value:(_vm.databaseManagementOptionsShow),callback:function ($$v) {_vm.databaseManagementOptionsShow=$$v},expression:\"databaseManagementOptionsShow\"}}),_c('br'),(_vm.databaseManagementOptionsShow)?_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('copy_config_from_usb'),\"icon\":\"mdi-usb-flash-drive\"},on:{\"click\":function($event){return _vm.serverSystemAction('copyConfigFromUSB')}}}):_vm._e(),_c('br'),(_vm.databaseManagementOptionsShow)?_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('database_config_import_all'),\"icon\":\"mdi-database-import\"},on:{\"click\":function($event){return _vm.importAll()}}}):_vm._e(),_c('br'),(_vm.databaseManagementOptionsShow)?_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('database_config_clean'),\"icon\":\"mdi-database-remove\"},on:{\"click\":function($event){return _vm.removeAll()}}}):_vm._e(),_c('br'),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('pull_updates'),\"icon\":\"mdi-progress-download\"},on:{\"click\":function($event){return _vm.gitPull()}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('reboot_system'),\"icon\":\"mdi-restart\"},on:{\"click\":function($event){return _vm.serverSystemAction('reboot')}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('shutdown_system'),\"icon\":\"mdi-power\"},on:{\"click\":function($event){return _vm.serverSystemAction('shutdown')}}}),_c('br'),_c('br'),_c('router-link',{attrs:{\"to\":_vm.childrenDebug[0].path,\"exact\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar href = ref.href;\nvar route = ref.route;\nvar navigate = ref.navigate;\nreturn [[_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"clickable\":\"\",\"label\":((_vm.$t('information')) + \" \" + (_vm.$t('for')) + \" \" + (_vm.$t('developer'))),\"icon\":_vm.childrenDebug[0].icon},on:{\"click\":navigate}})]]}}])})],1),_c('section')])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\nChange Quasar Language Pack at Runtime\nhttps://quasar.dev/options/quasar-language-packs#Change-Quasar-Language-Pack-at-Runtime\nApp Internationalization (I18n)\nCreate language switcher\nhttps://quasar.dev/options/app-internationalization#Create-language-switcher\n-->\n<template>\n    <q-select\n        rounded\n        outlined\n        class=\"\"\n        label=\"Quasar Language\"\n        v-model=\"lang\"\n        emit-value\n        :options=\"langOptions\"\n        map-options\n    />\n</template>\n\n<script>\nimport { LocalStorage } from 'quasar'\nimport languages from 'quasar/lang/index.json'\nconst appLanguages = languages.filter(lang =>\n    [\n        'de',\n        'en-us'\n    ].includes(lang.isoName)\n)\n\nexport default {\n    name: 'langSelect',\n    data () {\n        return {\n            lang: this.$q.lang.isoName,\n            langI18n: this.$i18n.locale\n        }\n    },\n    watch: {\n        lang (lang) {\n            // dynamic import quasar language pack\n            import(\n                /* webpackInclude: /(de|en-us)\\.js$/ */\n                'quasar/lang/' + lang\n            ).then(lang => {\n                this.$q.lang.set(lang.default)\n            })\n\n            // set i18n to same language\n            this.$i18n.locale = lang\n\n            // save language setting\n            try {\n                LocalStorage.set('language', lang)\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    },\n    created () {\n        this.langOptions = appLanguages.map(lang => ({\n            label: lang.nativeName, value: lang.isoName\n        }))\n    }\n}\n</script>\n","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./langSelect.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./langSelect.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./langSelect.vue?vue&type=template&id=bdf48294&\"\nimport script from \"./langSelect.vue?vue&type=script&lang=js&\"\nexport * from \"./langSelect.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QSelect});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-select',{attrs:{\"rounded\":\"\",\"outlined\":\"\",\"label\":\"Quasar Language\",\"emit-value\":\"\",\"options\":_vm.langOptions,\"map-options\":\"\"},model:{value:(_vm.lang),callback:function ($$v) {_vm.lang=$$v},expression:\"lang\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"","<template>\n    <q-page class=\"fit column no-wrap justify-center items-center content-center\">\n        <h1>{{ $t('global') }} {{ $t('settings') }}</h1>\n        <!--\n        how to use quasar-language-pack build ins in own components:\n        {{ $q.lang.label.close }}\n        https://github.com/quasarframework/quasar/blob/dev/ui/lang/de.js\n\n        App Internationalization (I18n) How To Use:\n        {{ $t('mykey1') }}\n        https://quasar.dev/options/app-internationalization#How-to-use\n        -->\n        <section class=\"text-center\">\n            <q-btn\n                round\n                :color=\"$q.dark.isActive ? 'blue' : 'black'\"\n                icon=\"mdi-lightbulb-on-outline\"\n                @click=\"$q.dark.toggle()\"\n                class=\"q-my-md\"\n                style=\"margin-right:0;\"\n            />\n            <langSelect\n                class=\"q-my-md\"\n                style=\"min-width:8em;\"\n            />\n        </section>\n        <section>\n            <!-- <q-btn\n                v-ripple\n                :label=\"$t('sync_with_cloud')\"\n                icon=\"mdi-cloud-sync-outline\"\n                @click=\"serverSystemAction('sync_with_cloud')\"\n            /><br> -->\n            <q-btn\n                v-ripple\n                :label=\"$t('database_harvest_export_csv')\"\n                icon=\"mdi-database-export\"\n                @click=\"serverExportToCSV('harvest', 'current_day')\"\n            /><br>\n            <q-btn\n                v-ripple\n                :label=\"$t('copy_csv_to_usb')\"\n                icon=\"mdi-usb-flash-drive\"\n                @click=\"serverSystemAction('copyCSVtoUSB')\"\n            /><br>\n\n            <q-toggle\n                size=\"xl\"\n                v-model=\"databaseManagementOptionsShow\"\n                :label=\"$t('database_management_options_show')\"\n            /><br>\n            <q-btn\n                v-if=\"databaseManagementOptionsShow\"\n                v-ripple\n                :label=\"$t('copy_config_from_usb')\"\n                icon=\"mdi-usb-flash-drive\"\n                @click=\"serverSystemAction('copyConfigFromUSB')\"\n            /><br>\n            <q-btn\n                v-if=\"databaseManagementOptionsShow\"\n                v-ripple\n                :label=\"$t('database_config_import_all')\"\n                icon=\"mdi-database-import\"\n                @click=\"importAll()\"\n            /><br>\n            <q-btn\n                v-if=\"databaseManagementOptionsShow\"\n                v-ripple\n                :label=\"$t('database_config_clean')\"\n                icon=\"mdi-database-remove\"\n                @click=\"removeAll()\"\n            /><br>\n\n            <br>\n\n            <q-btn\n                v-ripple\n                :label=\"$t('pull_updates')\"\n                icon=\"mdi-progress-download\"\n                @click=\"gitPull()\"\n            /><br>\n            <q-btn\n                v-ripple\n                :label=\"$t('reboot_system')\"\n                icon=\"mdi-restart\"\n                @click=\"serverSystemAction('reboot')\"\n            /><br>\n            <q-btn\n                v-ripple\n                :label=\"$t('shutdown_system')\"\n                icon=\"mdi-power\"\n                @click=\"serverSystemAction('shutdown')\"\n            /><br>\n\n            <br>\n\n            <router-link\n                :to=\"childrenDebug[0].path\"\n                exact\n                v-slot=\"{ href, route, navigate}\"\n            >\n                <template>\n                    <!--\n                    :label=\"`${$t('shutdown')} ${$t('system')}`\"\n                    :label=\"$t('debug')\"\n                    -->\n                    <q-btn\n                        clickable\n                        v-ripple\n                        :label=\"`${$t('information')} ${$t('for')} ${$t('developer')}`\"\n                        :icon=\"childrenDebug[0].icon\"\n                        @click=\"navigate\"\n                    />\n                </template>\n            </router-link>\n        </section>\n        <section>\n\n        </section>\n\n    </q-page>\n</template>\n\n<script>\nimport { childrenDebug } from '../router/routes'\nimport {\n    // useFind,\n    // useGet,\n    makeFindMixin\n} from 'feathers-vuex'\nimport { mapBind } from '../store/mapBind.js'\nimport langSelect from 'components/langSelect'\nimport {\n    importAll,\n    removeAll,\n    serverExportToCSV,\n    serverSystemAction,\n    gitPull\n} from '../management_func.js'\n\n// Detecting Locale\n// https://quasar.dev/options/quasar-language-packs#Detecting-Locale\n// https://quasar.dev/options/app-internationalization#Detecting-Locale\n// get browser lang:\n// this.$q.lang.getLocale()\n// get selected lang\n// this.$q.lang.isoName\n// or\n// this.$i18n.locale\n\nexport default {\n    data () {\n        return {\n            childrenDebug,\n            databaseManagementOptionsShow: false,\n            testthing: 'hello world'\n        }\n    },\n    computed: {\n        // ...mapBindIDItems('global-config', ['serialDevice', 'pos', 'btnSize', 'btnSpace']),\n        ...mapBind('localconfig', [\n            'btnSize',\n            'btnSpace',\n            'devMode'\n        ]),\n        globalConfigParams () {\n            return { query: {} }\n        },\n        crateParams () {\n            return {\n                query: {\n                    $sort: {\n                        _id: 1\n                    }\n                }\n            }\n        },\n        cropParams () {\n            return {\n                query: {\n                    $sort: {\n                        _id: 1\n                    }\n                }\n            }\n        },\n        cropFilterParams () {\n            return {\n                query: {\n                    $sort: {\n                        _id: 1\n                    }\n                }\n            }\n        }\n    },\n    methods: {\n        importAll: importAll,\n        removeAll: removeAll,\n        serverExportToCSV: serverExportToCSV,\n        serverSystemAction: serverSystemAction,\n        gitPull: gitPull\n    },\n    created: function () {\n        // return mapBindIDItems('global-config', ['serialDevice', 'pos', 'btnSize', 'btnSpace'])\n    },\n    mixins: [\n        makeFindMixin({ service: 'global-config' }),\n        makeFindMixin({ service: 'crate' }),\n        makeFindMixin({ service: 'crop' }),\n        makeFindMixin({ service: 'crop-filter' })\n    ],\n    components: {\n        langSelect\n    },\n    name: 'PageSettings'\n}\n</script>\n","import { render, staticRenderFns } from \"./Settings.vue?vue&type=template&id=470f7bfb&\"\nimport script from \"./Settings.vue?vue&type=script&lang=js&\"\nexport * from \"./Settings.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QToggle from 'quasar/src/components/toggle/QToggle.js';import Ripple from 'quasar/src/directives/Ripple.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QPage,QBtn,QToggle});qInstall(component, 'directives', {Ripple});\n","// inspired by mapBind.js\n// https://vuex.feathersjs.com/feathers-vuex-forms.html#feathersvuexinputwrapper\n\n// ------------------------------------------\n// usage:\n// import { mapBindIDItems } from 'store/mapBindIDItems.js'\n//\n// export default {\n//     name: 'ComponentName',\n//     computed: {\n//         ...mapBindIDItems('global-config', ['serialDevice', 'someOtherThing'])\n//     },\n// }\n\nimport Vue from 'vue'\nimport {\n    // useFind,\n    useGet\n} from 'feathers-vuex'\nimport {\n// import feathersClient, {\n    models\n} from '../feathers-client'\n\nexport function capitalizeFirstLetter (string) {\n    // https://stackoverflow.com/questions/1026069/how-do-i-make-the-first-letter-of-a-string-uppercase-in-javascript\n    return string.charAt(0).toUpperCase() + string.slice(1)\n}\nexport function decapitalizeFirstLetter (string) {\n    return string.charAt(0).toLowerCase() + string.slice(1)\n}\n\nexport function servicePath2modelClassName (servicePath) {\n    let modelParts = servicePath.split('-')\n    modelParts = modelParts.map(item => { return capitalizeFirstLetter(item) })\n    // console.log('modelParts', modelParts)\n    const modelClassName = modelParts.join('')\n    return modelClassName\n}\n\nexport function servicePath2servicePathName (servicePath) {\n    const modelClassName = servicePath2modelClassName(servicePath)\n    const servicePathName = decapitalizeFirstLetter(modelClassName)\n    return servicePathName\n}\n\nexport const findList = async function (servicePath) {\n    const modelClassName = servicePath2modelClassName(servicePath)\n    const ModelClass = models.api[modelClassName]\n    const params = {\n        query: {},\n        paginate: false\n    }\n    const resultFind = await ModelClass.find(params)\n    const gcList = resultFind.data\n    return gcList\n}\n\nexport const mapBindIDItems = function (servicePath, entryNames) {\n    // helper function for vuex\n    // create setter and getter functions for given store and properties\n\n    // ------------------------------------------\n    // global\n    const resultServicePath = {}\n    const resultEntries = {}\n\n    // console.log('models.api', models.api)\n    // const ModelClass = this.$FeathersVuex.api[servicePath2modelClassName(servicePath)]\n    const modelClassName = servicePath2modelClassName(servicePath)\n    // console.log('modelClassName', modelClassName)\n    const ModelClass = models.api[modelClassName]\n    // console.log('ModelClass', ModelClass)\n    const servicePathName = decapitalizeFirstLetter(modelClassName)\n\n    // ------------------------------------------\n    // prepare empty base\n    const reactiveBase = {}\n    Vue.set(reactiveBase, 'gcList', {})\n    resultServicePath[servicePathName] = {\n        get: function () {\n            return reactiveBase.gcList\n        }\n    }\n\n    for (const entryName of entryNames) {\n        resultEntries[entryName] = {\n            get: function () {\n                return null\n            },\n            set: function (val) {\n            }\n        }\n    }\n\n    // ------------------------------------------\n    // servicePath setup\n    const params = {\n        query: {},\n        paginate: false\n    }\n    ModelClass.find(params).then((resultFind) => {\n        for (const item of resultFind.data) {\n            reactiveBase.gcList[item.id] = item\n        }\n    }).catch((error) => {\n        // console.error(error.message, error)\n        console.error(error.type, error.message)\n    })\n\n    // ------------------------------------------\n    // entryNames setup\n    for (const entryName of entryNames) {\n        // get from server and store\n        const resultUseGet = useGet({\n            model: ModelClass,\n            id: entryName,\n            _id: entryName\n        })\n        let gcItem = resultUseGet.item.value\n        // check if item exists\n        if (!gcItem) {\n            // create new item\n            const data = {\n                id: entryName,\n                _id: entryName,\n                value: null\n            }\n            gcItem = new ModelClass(data)\n            // gcItem.create().catch((error) => {\n            //     console.log('mapBindIDItems: create - ' + error.message, error)\n            // })\n            gcItem.create().catch((error) => {\n                console.error('mapBindIDItems: create - ', error.type, error.message)\n                // console.log('gcItem', gcItem)\n                // console.log('ModelClass', ModelClass)\n                // console.log('ModelClass.store.commit', ModelClass.store.commit)\n                // console.log(`ModelClass.store.commit '${ModelClass.store.commit}'`)\n                console.log('→ manually commit mutation *addItem*')\n                ModelClass.store.commit(servicePath + '/addItem', data)\n            })\n        }\n        const gcItemClone = gcItem.clone()\n        resultEntries[entryName].get = function () {\n            return gcItemClone.value\n        }\n        resultEntries[entryName].set = function (val) {\n            gcItemClone.value = val\n            gcItemClone.commit()\n            gcItem.patch({ data: { value: val } })\n        }\n    }\n    const result = Object.assign({}, resultServicePath, resultEntries)\n    return result\n}\n"],"sourceRoot":""}