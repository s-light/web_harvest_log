{"version":3,"sources":["webpack:///./src/management_func.js","webpack:///./src/store/mapBind.js","webpack:///./src/pages/Settings.vue?9938","webpack:///./src/components/langSelect.vue?2712","webpack:///src/components/langSelect.vue","webpack:///./src/components/langSelect.vue?0906","webpack:///./src/components/langSelect.vue","webpack:///src/pages/Settings.vue","webpack:///./src/pages/Settings.vue?9669","webpack:///./src/pages/Settings.vue","webpack:///./src/store/mapBindIDItems.js"],"names":["importAll","serverImport","removeAll","removeDB","serverExportToCSV","servicePath","timeframe","console","group","$q","notify","color","message","icon","$FeathersVuex","api","Management","serverExportAsCSV","then","response","log","catch","error","groupEnd","removeDBFile","servicePathName","servicePath2servicePathName","serviceStore","entry","remove","serverSystemAction","action","gitPull","startScaleDemo","$store","dispatch","mapBind","base","params","capitalizeFirstLetter","string","charAt","toUpperCase","slice","map","mapState","result","key","value","Object","entries","get","set","val","mutationName","commit","decapitalizeFirstLetter","toLowerCase","servicePath2modelClassName","modelParts","split","item","modelClassName","join","findList","ModelClass","models","query","paginate","resultFind","find","gcList","data","mapBindIDItems","entryNames","resultServicePath","resultEntries","reactiveBase","Vue","entryName","id","type","resultUseGet","useGet","model","_id","gcItem","create","store","gcItemClone","clone","patch","assign"],"mappings":"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","file":"js/8.6837912a.js","sourcesContent":["\nimport { servicePath2servicePathName } from './store/mapBindIDItems.js'\n\nexport function importAll () {\n    this.serverImport('crate')\n    this.serverImport('crop')\n    this.serverImport('crop-filter')\n}\n\nexport function removeAll () {\n    // this.removeDBFile('crate')\n    // this.removeDBFile('crop')\n    // this.removeDBFile('crop-filter')\n    this.removeDB('crate')\n    this.removeDB('crop')\n    this.removeDB('crop-filter')\n}\n\nexport function serverExportToCSV (servicePath, timeframe) {\n    console.group('serverExportToCSV')\n    this.$q.notify({\n        color: 'info',\n        message: `Export ${servicePath} as CSV on server. Processing now.`,\n        icon: 'info'\n    })\n    this.$FeathersVuex.api.Management.serverExportAsCSV(servicePath, timeframe)\n        .then(response => {\n            console.log('serverImport: ', response)\n            this.$q.notify({\n                color: 'positive',\n                message: `${servicePath} done.`,\n                icon: 'info'\n            })\n        }).catch(error => {\n            console.error('serverImport:', error)\n            this.$q.notify({\n                color: 'negative',\n                message: `${servicePath} loading failed.`,\n                icon: 'report_problem'\n            })\n        })\n    console.groupEnd()\n}\n\nexport function serverImport (servicePath) {\n    console.group('serverImport')\n    this.$q.notify({\n        color: 'info',\n        message: `Import ${servicePath} from server. Processing now.`,\n        icon: 'info'\n    })\n    this.$FeathersVuex.api.Management.serverImport(servicePath)\n        .then(response => {\n            console.log('serverImport: ', response)\n            this.$q.notify({\n                color: 'positive',\n                message: `${servicePath} done.`,\n                icon: 'info'\n            })\n        }).catch(error => {\n            console.error('serverImport:', error)\n            this.$q.notify({\n                color: 'negative',\n                message: `${servicePath} loading failed.`,\n                icon: 'report_problem'\n            })\n        })\n    console.groupEnd()\n}\n\nexport function removeDBFile (servicePath) {\n    console.group('removeDBFile')\n    this.$q.notify({\n        color: 'info',\n        message: `remove ${servicePath} db from server. Processing now.`,\n        icon: 'info'\n    })\n    this.$FeathersVuex.api.Management.removeDBFile(servicePath)\n        .then(response => {\n            console.log('removeDBFile: ', response)\n            this.$q.notify({\n                color: 'positive',\n                message: `${servicePath} done.`,\n                icon: 'info'\n            })\n        }).catch(error => {\n            console.error('removeDBFile:', error)\n            this.$q.notify({\n                color: 'negative',\n                message: `${servicePath} removing failed.`,\n                icon: 'report_problem'\n            })\n        })\n    console.groupEnd()\n}\n\nexport function removeDB (servicePath) {\n    console.group('removeDB', servicePath)\n    this.$q.notify({\n        color: 'info',\n        message: `remove all entries from ${servicePath}. Processing now.`,\n        icon: 'info'\n    })\n    const servicePathName = servicePath2servicePathName(servicePath)\n    const serviceStore = this.[servicePathName]\n    // console.log(this)\n    console.log('serviceStore', serviceStore)\n    for (var entry of serviceStore) {\n        console.log(entry)\n        entry.remove()\n    }\n    this.$q.notify({\n        color: 'positive',\n        message: `${servicePath} done.`,\n        // timeout: 30500,\n        icon: 'info'\n    })\n    console.groupEnd()\n}\n\nexport function serverSystemAction (action) {\n    console.group('serverSystemAction', action)\n    this.$q.notify({\n        color: 'info',\n        message: `initiated server system action '${action}'`,\n        icon: 'info'\n    })\n    this.$FeathersVuex.api.Management.serverSystemAction(action)\n        .then(response => {\n            console.log('serverSystemAction: ', response)\n            this.$q.notify({\n                color: 'positive',\n                message: `server system action '${action}' running. \\n '${response}'`,\n                icon: 'info'\n            })\n        }).catch(error => {\n            console.error('serverSystemAction:', error)\n            this.$q.notify({\n                color: 'negative',\n                message: `'${action}' failed. '${error}'`,\n                icon: 'report_problem'\n            })\n        })\n    console.groupEnd()\n}\n\nexport function gitPull () {\n    console.group('gitPull')\n    this.$q.notify({\n        color: 'info',\n        message: 'pull software updates',\n        icon: 'info'\n    })\n    this.$FeathersVuex.api.Management.gitPull()\n        .then(response => {\n            console.log('gitPull: ', response)\n            this.$q.notify({\n                color: 'positive',\n                message: `gitPull successful. '${response}'`,\n                icon: 'info'\n            })\n        }).catch(error => {\n            console.error('gitPull:', error)\n            this.$q.notify({\n                color: 'negative',\n                message: `gitPull failed. '${error}'`,\n                icon: 'report_problem'\n            })\n        })\n    console.groupEnd()\n}\n\nexport function startScaleDemo () {\n    // this.$FeathersVuex.api.Serial\n    // if (!model.demoHandler) {\n    //     model.demoHandler = new ScaleDemoGenerator(model.store)\n    // }\n    // model.demoHandler.start()\n    // model.store.commit('localconfig/setScaleUnit', 'kg')\n    this.$store.dispatch('localconfig/startScaleDemo').then(response => {\n        console.log('startScaleDemo: ', response)\n        this.$q.notify({\n            color: 'positive',\n            message: 'startScaleDemo done.',\n            icon: 'info'\n        })\n    }).catch(error => {\n        console.error('startScaleDemo:', error)\n        this.$q.notify({\n            color: 'negative',\n            message: 'startScaleDemo failed.',\n            icon: 'report_problem'\n        })\n    })\n}\n","// ------------------------------------------\n// usage:\n// import { mapBind } from 'store/mapBind.js'\n//\n// export default {\n//     name: 'ComponentName',\n//     computed: {\n//         ...mapBind('appconfig', ['globalMessage', 'someOtherThing'])\n//     },\n// }\n\n// inspired by https://stackoverflow.com/a/48447361/574981\n\nimport { mapState } from 'vuex'\n\n// export const mapBind = (base, params = {}) => (\n// export const mapBind = (base, params) => (\nexport const mapBind = function (base, params) {\n    // helper function for vuex\n    // create setter and getter functions for given store and properties\n    function capitalizeFirstLetter (string) {\n        // https://stackoverflow.com/questions/1026069/how-do-i-make-the-first-letter-of-a-string-uppercase-in-javascript\n        return string.charAt(0).toUpperCase() + string.slice(1)\n    }\n\n    const map = mapState(base, params)\n    const result = {}\n    // console.log(map)\n    for (const [key, value] of Object.entries(map)) {\n        // console.log('key', key)\n        // console.log('value', value)\n        result[key] = {\n            get: value\n        }\n        result[key].set = function (val) {\n            // this.$store.commit('appconfig/setGlobalMessage', val)\n            const mutationName = 'set' + capitalizeFirstLetter(key)\n            this.$store.commit(base + '/' + mutationName, val)\n        }\n    }\n    // console.log(result)\n    return result\n// )\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',{staticClass:\"fit column no-wrap justify-center items-center content-center\"},[_c('h1',[_vm._v(_vm._s(_vm.$t('global'))+\" \"+_vm._s(_vm.$t('settings')))]),_c('section',[_c('q-btn',{attrs:{\"round\":\"\",\"color\":_vm.$q.dark.isActive ? 'blue' : 'black',\"icon\":\"mdi-lightbulb-on-outline\"},on:{\"click\":function($event){return _vm.$q.dark.toggle()}}}),_c('q-btn',{attrs:{\"flat\":\"\",\"round\":\"\",\"icon\":_vm.$q.dark.isActive ? 'brightness_2' : 'brightness_5'},on:{\"click\":function($event){return _vm.$q.dark.toggle()}}}),_c('langSelect')],1),_c('section',[_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":\"export harvest to csv on server\",\"icon\":\"mdi-database-export\"},on:{\"click\":function($event){return _vm.serverExportToCSV('harvest', 'current_day')}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":\"import config from files\",\"icon\":\"mdi-database-export\"},on:{\"click\":function($event){return _vm.importAll()}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":\"remove config database entries\",\"icon\":\"mdi-database-export\"},on:{\"click\":function($event){return _vm.removeAll()}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('shutdown_system'),\"icon\":\"mdi-database-export\"},on:{\"click\":function($event){return _vm.serverSystemAction('shutdown')}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('reboot_system'),\"icon\":\"mdi-database-export\"},on:{\"click\":function($event){return _vm.serverSystemAction('reboot')}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":\"pull software updates\",\"icon\":\"mdi-database-export\"},on:{\"click\":function($event){return _vm.gitPull()}}}),_c('br'),_c('br')],1),_c('section',[_c('router-link',{attrs:{\"to\":_vm.childrenDebug[0].path,\"exact\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar href = ref.href;\nvar route = ref.route;\nvar navigate = ref.navigate;\nvar isExactActive = ref.isExactActive;\nreturn [[_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],class:isExactActive ? 'q-item q-router-link--active' : 'q-item',attrs:{\"clickable\":\"\",\"label\":((_vm.$t('information')) + \" \" + (_vm.$t('for')) + \" \" + (_vm.$t('developer'))),\"icon\":_vm.childrenDebug[0].icon},on:{\"click\":navigate}})]]}}])})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-select',{staticClass:\"q-mr-md\",attrs:{\"rounded\":\"\",\"outlined\":\"\",\"label\":\"Quasar Language\",\"emit-value\":\"\",\"options\":_vm.langOptions,\"map-options\":\"\"},model:{value:(_vm.lang),callback:function ($$v) {_vm.lang=$$v},expression:\"lang\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\nChange Quasar Language Pack at Runtime\nhttps://quasar.dev/options/quasar-language-packs#Change-Quasar-Language-Pack-at-Runtime\nApp Internationalization (I18n)\nCreate language switcher\nhttps://quasar.dev/options/app-internationalization#Create-language-switcher\n-->\n<template>\n    <q-select\n        rounded\n        outlined\n        class=\"q-mr-md\"\n        label=\"Quasar Language\"\n        v-model=\"lang\"\n        emit-value\n        :options=\"langOptions\"\n        map-options\n    />\n</template>\n\n<script>\nimport { LocalStorage } from 'quasar'\nimport languages from 'quasar/lang/index.json'\nconst appLanguages = languages.filter(lang =>\n    [\n        'de',\n        'en-us'\n    ].includes(lang.isoName)\n)\n\nexport default {\n    name: 'langSelect',\n    data () {\n        return {\n            lang: this.$q.lang.isoName,\n            langI18n: this.$i18n.locale\n        }\n    },\n    watch: {\n        lang (lang) {\n            // dynamic import quasar language pack\n            import(\n                /* webpackInclude: /(de|en-us)\\.js$/ */\n                'quasar/lang/' + lang\n            ).then(lang => {\n                this.$q.lang.set(lang.default)\n            })\n\n            // set i18n to same language\n            this.$i18n.locale = lang\n\n            // save language setting\n            try {\n                LocalStorage.set('language', lang)\n            } catch (e) {\n                console.error(e)\n            }\n        }\n    },\n    created () {\n        this.langOptions = appLanguages.map(lang => ({\n            label: lang.nativeName, value: lang.isoName\n        }))\n    }\n}\n</script>\n","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./langSelect.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./langSelect.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./langSelect.vue?vue&type=template&id=5ddbc17d&\"\nimport script from \"./langSelect.vue?vue&type=script&lang=js&\"\nexport * from \"./langSelect.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QSelect});\n","<template>\n    <q-page class=\"fit column no-wrap justify-center items-center content-center\">\n        <h1>{{ $t('global') }} {{ $t('settings') }}</h1>\n        <!--\n        how to use quasar-language-pack build ins in own components:\n        {{ $q.lang.label.close }}\n        https://github.com/quasarframework/quasar/blob/dev/ui/lang/de.js\n\n        App Internationalization (I18n) How To Use:\n        {{ $t('mykey1') }}\n        https://quasar.dev/options/app-internationalization#How-to-use\n        -->\n        <section>\n            <q-btn\n                round\n                :color=\"$q.dark.isActive ? 'blue' : 'black'\"\n                icon=\"mdi-lightbulb-on-outline\"\n                @click=\"$q.dark.toggle()\"\n            />\n             <q-btn\n                flat\n                round\n                @click=\"$q.dark.toggle()\"\n                :icon=\"$q.dark.isActive ? 'brightness_2' : 'brightness_5'\"\n            />\n            <langSelect />\n        </section>\n        <section>\n            <q-btn\n                v-ripple\n                label=\"export harvest to csv on server\"\n                icon=\"mdi-database-export\"\n                @click=\"serverExportToCSV('harvest', 'current_day')\"\n            /><br>\n            <!-- <q-btn\n                v-ripple\n                label=\"import global-config from file\"\n                icon=\"mdi-database-export\"\n                @click=\"serverImport('global-config')\"\n            /><br> -->\n            <q-btn\n                v-ripple\n                label=\"import config from files\"\n                icon=\"mdi-database-export\"\n                @click=\"importAll()\"\n            /><br>\n            <!-- <q-btn\n                v-ripple\n                label=\"import crop from file\"\n                icon=\"mdi-database-export\"\n                @click=\"serverImport('crop')\"\n            /><br>\n            <q-btn\n                v-ripple\n                label=\"import cropFilter from file\"\n                icon=\"mdi-database-export\"\n                @click=\"serverImport('crop-filter')\"\n            /><br>\n            <q-btn\n                v-ripple\n                label=\"import crate from file\"\n                icon=\"mdi-database-export\"\n                @click=\"serverImport('crate')\"\n            /> -->\n            <q-btn\n                v-ripple\n                label=\"remove config database entries\"\n                icon=\"mdi-database-export\"\n                @click=\"removeAll()\"\n            /><br>\n            <q-btn\n                v-ripple\n                :label=\"$t('shutdown_system')\"\n                icon=\"mdi-database-export\"\n                @click=\"serverSystemAction('shutdown')\"\n            /><br>\n            <q-btn\n                v-ripple\n                :label=\"$t('reboot_system')\"\n                icon=\"mdi-database-export\"\n                @click=\"serverSystemAction('reboot')\"\n            /><br>\n            <q-btn\n                v-ripple\n                label=\"pull software updates\"\n                icon=\"mdi-database-export\"\n                @click=\"gitPull()\"\n            /><br>\n            <br>\n        </section>\n        <section>\n            <router-link\n                :to=\"childrenDebug[0].path\"\n                exact\n                v-slot=\"{ href, route, navigate, isExactActive}\"\n            >\n                <template>\n                    <!--\n                    :label=\"`${$t('shutdown')} ${$t('system')}`\"\n                    :label=\"$t('debug')\"\n                    -->\n                    <q-btn\n                        clickable\n                        v-ripple\n                        :label=\"`${$t('information')} ${$t('for')} ${$t('developer')}`\"\n                        :icon=\"childrenDebug[0].icon\"\n                        @click=\"navigate\"\n                        :class=\"isExactActive ? 'q-item q-router-link--active' : 'q-item'\"\n                    />\n                </template>\n            </router-link>\n\n        </section>\n\n    </q-page>\n</template>\n\n<script>\nimport { childrenDebug } from '../router/routes'\nimport {\n    // useFind,\n    // useGet,\n    makeFindMixin\n} from 'feathers-vuex'\nimport { mapBind } from '../store/mapBind.js'\nimport langSelect from 'components/langSelect'\nimport {\n    importAll,\n    removeAll,\n    serverExportToCSV,\n    serverImport,\n    removeDBFile,\n    removeDB,\n    serverSystemAction,\n    gitPull,\n    startScaleDemo\n} from '../management_func.js'\n\n// Detecting Locale\n// https://quasar.dev/options/quasar-language-packs#Detecting-Locale\n// https://quasar.dev/options/app-internationalization#Detecting-Locale\n// get browser lang:\n// this.$q.lang.getLocale()\n// get selected lang\n// this.$q.lang.isoName\n// or\n// this.$i18n.locale\n\nexport default {\n    data () {\n        return {\n            childrenDebug,\n            testthing: 'hello world'\n        }\n    },\n    computed: {\n        // ...mapBindIDItems('global-config', ['serialDevice', 'pos', 'btnSize', 'btnSpace']),\n        ...mapBind('localconfig', [\n            'btnSize',\n            'btnSpace',\n            'devMode'\n        ]),\n        globalConfigParams () {\n            return { query: {} }\n        },\n        crateParams () {\n            return {\n                query: {\n                    $sort: {\n                        _id: 1\n                    }\n                }\n            }\n        },\n        cropParams () {\n            return {\n                query: {\n                    $sort: {\n                        _id: 1\n                    }\n                }\n            }\n        },\n        cropFilterParams () {\n            return {\n                query: {\n                    $sort: {\n                        _id: 1\n                    }\n                }\n            }\n        }\n    },\n    methods: {\n        importAll: importAll,\n        removeAll: removeAll,\n        serverExportToCSV: serverExportToCSV,\n        serverImport: serverImport,\n        removeDBFile: removeDBFile,\n        removeDB: removeDB,\n        serverSystemAction: serverSystemAction,\n        gitPull: gitPull,\n        startScaleDemo: startScaleDemo\n    },\n    created: function () {\n        // return mapBindIDItems('global-config', ['serialDevice', 'pos', 'btnSize', 'btnSpace'])\n    },\n    mixins: [\n        makeFindMixin({ service: 'global-config' }),\n        makeFindMixin({ service: 'crate' }),\n        makeFindMixin({ service: 'crop' }),\n        makeFindMixin({ service: 'crop-filter' })\n    ],\n    components: {\n        langSelect\n    },\n    name: 'PageSettings'\n}\n</script>\n","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Settings.vue?vue&type=template&id=5b5a1ff1&\"\nimport script from \"./Settings.vue?vue&type=script&lang=js&\"\nexport * from \"./Settings.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QItem from 'quasar/src/components/item/QItem.js';import Ripple from 'quasar/src/directives/Ripple.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QPage,QBtn,QItem});qInstall(component, 'directives', {Ripple});\n","// inspired by mapBind.js\n// https://vuex.feathersjs.com/feathers-vuex-forms.html#feathersvuexinputwrapper\n\n// ------------------------------------------\n// usage:\n// import { mapBindIDItems } from 'store/mapBindIDItems.js'\n//\n// export default {\n//     name: 'ComponentName',\n//     computed: {\n//         ...mapBindIDItems('global-config', ['serialDevice', 'someOtherThing'])\n//     },\n// }\n\nimport Vue from 'vue'\nimport {\n    // useFind,\n    useGet\n} from 'feathers-vuex'\nimport {\n// import feathersClient, {\n    models\n} from '../feathers-client'\n\nexport function capitalizeFirstLetter (string) {\n    // https://stackoverflow.com/questions/1026069/how-do-i-make-the-first-letter-of-a-string-uppercase-in-javascript\n    return string.charAt(0).toUpperCase() + string.slice(1)\n}\nexport function decapitalizeFirstLetter (string) {\n    return string.charAt(0).toLowerCase() + string.slice(1)\n}\n\nexport function servicePath2modelClassName (servicePath) {\n    let modelParts = servicePath.split('-')\n    modelParts = modelParts.map(item => { return capitalizeFirstLetter(item) })\n    // console.log('modelParts', modelParts)\n    const modelClassName = modelParts.join('')\n    return modelClassName\n}\n\nexport function servicePath2servicePathName (servicePath) {\n    const modelClassName = servicePath2modelClassName(servicePath)\n    const servicePathName = decapitalizeFirstLetter(modelClassName)\n    return servicePathName\n}\n\nexport const findList = async function (servicePath) {\n    const modelClassName = servicePath2modelClassName(servicePath)\n    const ModelClass = models.api[modelClassName]\n    const params = {\n        query: {},\n        paginate: false\n    }\n    const resultFind = await ModelClass.find(params)\n    const gcList = resultFind.data\n    return gcList\n}\n\nexport const mapBindIDItems = function (servicePath, entryNames) {\n    // helper function for vuex\n    // create setter and getter functions for given store and properties\n\n    // ------------------------------------------\n    // global\n    const resultServicePath = {}\n    const resultEntries = {}\n\n    // console.log('models.api', models.api)\n    // const ModelClass = this.$FeathersVuex.api[servicePath2modelClassName(servicePath)]\n    const modelClassName = servicePath2modelClassName(servicePath)\n    // console.log('modelClassName', modelClassName)\n    const ModelClass = models.api[modelClassName]\n    // console.log('ModelClass', ModelClass)\n    const servicePathName = decapitalizeFirstLetter(modelClassName)\n\n    // ------------------------------------------\n    // prepare empty base\n    const reactiveBase = {}\n    Vue.set(reactiveBase, 'gcList', {})\n    resultServicePath[servicePathName] = {\n        get: function () {\n            return reactiveBase.gcList\n        }\n    }\n\n    for (const entryName of entryNames) {\n        resultEntries[entryName] = {\n            get: function () {\n                return null\n            },\n            set: function (val) {\n            }\n        }\n    }\n\n    // ------------------------------------------\n    // servicePath setup\n    const params = {\n        query: {},\n        paginate: false\n    }\n    ModelClass.find(params).then((resultFind) => {\n        for (const item of resultFind.data) {\n            reactiveBase.gcList[item.id] = item\n        }\n    }).catch((error) => {\n        // console.error(error.message, error)\n        console.error(error.type, error.message)\n    })\n\n    // ------------------------------------------\n    // entryNames setup\n    for (const entryName of entryNames) {\n        // get from server and store\n        const resultUseGet = useGet({\n            model: ModelClass,\n            id: entryName,\n            _id: entryName\n        })\n        let gcItem = resultUseGet.item.value\n        // check if item exists\n        if (!gcItem) {\n            // create new item\n            const data = {\n                id: entryName,\n                _id: entryName,\n                value: null\n            }\n            gcItem = new ModelClass(data)\n            // gcItem.create().catch((error) => {\n            //     console.log('mapBindIDItems: create - ' + error.message, error)\n            // })\n            gcItem.create().catch((error) => {\n                console.error('mapBindIDItems: create - ', error.type, error.message)\n                // console.log('gcItem', gcItem)\n                // console.log('ModelClass', ModelClass)\n                // console.log('ModelClass.store.commit', ModelClass.store.commit)\n                // console.log(`ModelClass.store.commit '${ModelClass.store.commit}'`)\n                console.log('→ manually commit mutation *addItem*')\n                ModelClass.store.commit(servicePath + '/addItem', data)\n            })\n        }\n        const gcItemClone = gcItem.clone()\n        resultEntries[entryName].get = function () {\n            return gcItemClone.value\n        }\n        resultEntries[entryName].set = function (val) {\n            gcItemClone.value = val\n            gcItemClone.commit()\n            gcItem.patch({ data: { value: val } })\n        }\n    }\n    const result = Object.assign({}, resultServicePath, resultEntries)\n    return result\n}\n"],"sourceRoot":""}