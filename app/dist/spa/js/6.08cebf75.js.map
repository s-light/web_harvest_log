{"version":3,"sources":["webpack:///./src/components/debugSection.vue?a621","webpack:///./src/components/debugSection.vue?b84a","webpack:///./src/components/debugSection.vue?1f76","webpack:///src/components/debugSection.vue","webpack:///./src/components/debugSection.vue","webpack:///./src/pages/Settings.vue?a213","webpack:///./src/store/mapBindIDItems.js","webpack:///src/components/settingsSerial.vue","webpack:///./src/components/settingsSerial.vue?3cd9","webpack:///./src/components/settingsSerial.vue","webpack:///./src/components/settingsSerial.vue?4d0f","webpack:///src/pages/Settings.vue","webpack:///./src/pages/Settings.vue?9669","webpack:///./src/pages/Settings.vue"],"names":["component","_h","this","$createElement","_c","_self","staticClass","_v","_s","label","_f","_vm","obj","servicePath2modelClassName","servicePath","modelParts","split","map","item","string","charAt","toUpperCase","slice","join","dummyResponder","entryNames","resultServicePath","resultEntries","modelClassName","ModelClass","models","api","servicePathName","toLowerCase","reactiveBase","Vue","set","get","gcList","entryName","val","find","query","paginate","then","resultFind","data","id","catch","error","console","message","gcItem","useGet","model","_id","value","create","gcItemClone","clone","commit","patch","Object","assign","staticStyle","attrs","comName","deviceList","scopedSlots","_u","key","fn","scope","_g","_b","itemProps","itemEvents","opt","pnpId","manufacturer","vendorId","productId","serialNumber","proxy","on","$event","updateSerialDeviceList","callback","$$v","deviceSelected","expression","style","opacity","connected","connect","list","port","baudRate","serial","QPage","QSelect","QItem","QItemSection","QItemLabel","QBtn","QSpinnerRadio","QSpinnerGears","QIcon","$q","dark","isActive","toggle","directives","name","rawName","serverExportToCSV","importAll","testthing","QInput","Ripple"],"mappings":"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","file":"js/6.08cebf75.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-2-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-2-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-2-2!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./debugSection.vue?vue&type=style&index=0&media=screen&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"debug\"},[_c('label',[_vm._v(_vm._s(_vm.label))]),_c('pre',[_vm._v(_vm._s(_vm._f(\"pretty\")(_vm.obj)))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./debugSection.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./debugSection.vue?vue&type=script&lang=js&\"","\n<!-- usage:\n\n<DebugSection :obj=\"myValueToDebug\"/>\n\n-->\n\n<template>\n    <section class=\"debug\">\n        <label>{{ label }}</label>\n        <pre>{{ obj | pretty }}</pre>\n    </section>\n</template>\n\n<script>\nexport default {\n    // name: 'debugSection',\n    props: {\n        obj: {\n            // type: [Object, Array, String, Num    ],\n            default: function () {\n                return {}\n            }\n        },\n        label: {\n            type: String,\n            default: ''\n        }\n    },\n    data () {\n        return {}\n    },\n    filters: {\n        pretty: function (value) {\n            let valueJson = value\n            try {\n                valueJson = JSON.parse(value)\n            } catch (e) {\n                // console.log(value, e)\n            }\n            return JSON.stringify(valueJson, null, 4)\n        }\n    }\n}\n</script>\n\n<style media=\"screen\">\nsection.debug {\n    min-width: 4em;\n    min-height: 2em;\n    background-color: hsla(230.1, 100%, 50%, 0.05);\n    border-radius: 0.5em;\n    box-shadow: 0 0 20px hsla(200, 100%, 50%, 0.2);\n    margin: 1em;\n    padding: 1em;\n}\nsection.debug label {\n    opacity: 0.5\n}\nsection.debug pre {\n    margin: 0;\n    padding: 0;\n}\n</style>\n","import { render, staticRenderFns } from \"./debugSection.vue?vue&type=template&id=b2731162&\"\nimport script from \"./debugSection.vue?vue&type=script&lang=js&\"\nexport * from \"./debugSection.vue?vue&type=script&lang=js&\"\nimport style0 from \"./debugSection.vue?vue&type=style&index=0&media=screen&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',{staticClass:\"fit column no-wrap justify-center items-center content-center\"},[_c('h1',[_vm._v(\"Global Settings\")]),_c('section',[_c('q-btn',{attrs:{\"round\":\"\",\"color\":_vm.$q.dark.isActive ? 'blue' : 'black',\"icon\":\"mdi-lightbulb-on-outline\"},on:{\"click\":function($event){return _vm.$q.dark.toggle()}}})],1),_c('section',[_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":\"export harvest to csv on server\",\"icon\":\"mdi-database-export\"},on:{\"click\":function($event){return _vm.serverExportToCSV('harvest', 'current_day')}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":\"import crop from file\",\"icon\":\"mdi-database-export\"},on:{\"click\":function($event){return _vm.importAll()}}}),_c('br')],1),_c('settingsSerial'),_c('debugSection',{attrs:{\"label\":\"testthing\",\"obj\":_vm.testthing}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// inspired by mapBind.js\n// https://vuex.feathersjs.com/feathers-vuex-forms.html#feathersvuexinputwrapper\n\n// ------------------------------------------\n// usage:\n// import { mapBindIDItems } from 'store/mapBindIDItems.js'\n//\n// export default {\n//     name: 'ComponentName',\n//     computed: {\n//         ...mapBindIDItems('global-config', ['serialDevice', 'someOtherThing'])\n//     },\n// }\n\nimport Vue from 'vue'\nimport {\n    // useFind,\n    useGet\n} from 'feathers-vuex'\nimport { models } from '../feathers-client'\n\nfunction capitalizeFirstLetter (string) {\n    // https://stackoverflow.com/questions/1026069/how-do-i-make-the-first-letter-of-a-string-uppercase-in-javascript\n    return string.charAt(0).toUpperCase() + string.slice(1)\n}\nfunction decapitalizeFirstLetter (string) {\n    return string.charAt(0).toLowerCase() + string.slice(1)\n}\n\nfunction servicePath2modelClassName (servicePath) {\n    let modelParts = servicePath.split('-')\n    modelParts = modelParts.map(item => { return capitalizeFirstLetter(item) })\n    // console.log('modelParts', modelParts)\n    const modelClassName = modelParts.join('')\n    return modelClassName\n}\n\nexport const findList = async function (servicePath) {\n    const modelClassName = servicePath2modelClassName(servicePath)\n    const ModelClass = models.api[modelClassName]\n    const params = {\n        query: {},\n        paginate: false\n    }\n    const resultFind = await ModelClass.find(params)\n    const gcList = resultFind.data\n    return gcList\n}\n\nexport const mapBindIDItems = function (servicePath, entryNames) {\n    // helper function for vuex\n    // create setter and getter functions for given store and properties\n\n    // ------------------------------------------\n    // global\n    const resultServicePath = {}\n    const resultEntries = {}\n\n    // console.log('models.api', models.api)\n    // const ModelClass = this.$FeathersVuex.api[servicePath2modelClassName(servicePath)]\n    const modelClassName = servicePath2modelClassName(servicePath)\n    // console.log('modelClassName', modelClassName)\n    const ModelClass = models.api[modelClassName]\n    // console.log('ModelClass', ModelClass)\n    const servicePathName = decapitalizeFirstLetter(modelClassName)\n\n    // ------------------------------------------\n    // prepare empty base\n    const reactiveBase = {}\n    Vue.set(reactiveBase, 'gcList', {})\n    resultServicePath[servicePathName] = {\n        get: function () {\n            return reactiveBase.gcList\n        }\n    }\n\n    for (const entryName of entryNames) {\n        resultEntries[entryName] = {\n            get: function () {\n                return null\n            },\n            set: function (val) {\n            }\n        }\n    }\n\n    // ------------------------------------------\n    // servicePath setup\n    const params = {\n        query: {},\n        paginate: false\n    }\n    ModelClass.find(params).then((resultFind) => {\n        for (const item of resultFind.data) {\n            reactiveBase.gcList[item.id] = item\n        }\n    }).catch((error) => {\n        console.error(error.message, error)\n    })\n\n    // ------------------------------------------\n    // entryNames setup\n    for (const entryName of entryNames) {\n        // get from server and store\n        const resultUseGet = useGet({\n            model: ModelClass,\n            id: entryName,\n            _id: entryName\n        })\n        let gcItem = resultUseGet.item.value\n        // check if item exists\n        if (!gcItem) {\n            // create new item\n            gcItem = new ModelClass({\n                id: entryName,\n                _id: entryName,\n                value: null\n            })\n            gcItem.create().catch((error) => {\n                console.error('mapBindIDItems: create - ' + error.message, error)\n            })\n        }\n        const gcItemClone = gcItem.clone()\n        resultEntries[entryName].get = function () {\n            return gcItemClone.value\n        }\n        resultEntries[entryName].set = function (val) {\n            gcItemClone.value = val\n            gcItemClone.commit()\n            gcItem.patch({ data: { value: val } })\n        }\n    }\n    const result = Object.assign({}, resultServicePath, resultEntries)\n    return result\n}\n","<template>\n    <q-page class=\"fit column no-wrap justify-center items-center content-center\">\n        <section>\n            <h2>Serial Settings</h2>\n            <!-- :disable=\"connected\" -->\n            <q-select\n                rounded\n                outlined\n                class=\"q-mr-md\"\n                style=\"min-width:12em; background: transparent\"\n                label=\"Device\"\n                v-model=\"deviceSelected\"\n                :option-label=\"(item) => item.comName\"\n                :option-value=\"(item) => item\"\n                :options=\"deviceList\"\n            >\n                <template v-slot:option=\"scope\">\n                    <q-item\n                        v-bind=\"scope.itemProps\"\n                        v-on=\"scope.itemEvents\"\n                    >\n                        <q-item-section>\n                            <q-item-label>\n                                {{ scope.opt.comName }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                {{ scope.opt.pnpId }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                {{ scope.opt.manufacturer }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                vendorId:{{ scope.opt.vendorId }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                productId:{{ scope.opt.productId }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                serialNumber:{{ scope.opt.serialNumber }}\n                            </q-item-label>\n                        </q-item-section>\n                    </q-item>\n                </template>\n                <template v-slot:no-option>\n                    <q-item>\n                        <q-item-section>\n                            No Devices\n                        </q-item-section>\n                    </q-item>\n                </template>\n                <template v-slot:append>\n                    <!-- :disable=\"connected\"\n                    :loading=\"deviceSearching\" -->\n                    <q-btn\n                        flat\n                        round\n                        dense\n                        hint=\"search devices\"\n                        icon=\"refresh\"\n                        @click=\"updateSerialDeviceList()\"\n                    >\n                        <template v-slot:loading>\n                            <q-spinner-radio />\n                        </template>\n                    </q-btn>\n                </template>\n            </q-select>\n\n            <!-- :loading=\"deviceConnecting\" -->\n            <q-btn\n                rounded\n                :icon=\"connected ? 'phonelink_off' : 'phonelink'\"\n                :style=\"{opacity: (deviceSelected ? 'inherit' : '0.05')}\"\n                @click=\"connect()\"\n                :label=\"connected ? 'disconnect' : 'connect'\"\n                :disable=\"!deviceSelected\"\n            >\n                <template v-slot:loading>\n                    <q-spinner-gears />\n                </template>\n                <template v-slot:after>\n                    <q-icon\n                        name=\"close\"\n                    />\n                </template>\n            </q-btn>\n            <debugSection label=\"list\" :obj=\"list\"/>\n            <debugSection label=\"port\" :obj=\"port\"/>\n            <debugSection label=\"baudRate\" :obj=\"baudRate\"/>\n            <debugSection label=\"serial\" :obj=\"serial\"/>\n        </section>\n    </q-page>\n</template>\n\n<script>\nimport {\n    // useFind,\n    // useGet,\n    makeFindMixin\n} from 'feathers-vuex'\nimport { mapBindIDItems } from '../store/mapBindIDItems.js'\nimport DebugSection from 'components/debugSection'\n\nconst dummyResponder = {\n    vendorId: -1,\n    productId: -1,\n    comName: '/dummyResponder/0',\n    pnpId: -1,\n    locationId: -1,\n    serialNumber: '42',\n    manufacturer: 's-light.eu',\n    product: 'dummyResponder',\n    release: undefined,\n    interface: undefined,\n    usagePage: undefined,\n    usage: undefined\n}\n\nexport default {\n    data () {\n        return {\n            deviceSelected: {},\n            deviceList: [dummyResponder]\n        }\n    },\n    components: { DebugSection },\n    mixins: [\n        makeFindMixin({ service: 'serial' })\n    ],\n    computed: {\n        serialParams () {\n            return { query: {} }\n        },\n        ...mapBindIDItems('serial', ['list', 'port', 'baudRate', 'connected'])\n    },\n    methods: {\n        updateSerialDeviceList: function () {\n            console.group('serverExportToCSV')\n            const servicePath = 'serial'\n            this.$q.notify({\n                color: 'info',\n                message: `update ${servicePath} device list. Processing now.`,\n                icon: 'info'\n            })\n            this.$FeathersVuex.api.Management.updateSerialDeviceList()\n                .then(response => {\n                    console.log('updateSerialDeviceList: ', response)\n                    this.$q.notify({\n                        color: 'positive',\n                        message: `${servicePath} done.`,\n                        icon: 'info'\n                    })\n                }).catch(error => {\n                    console.error('updateSerialDeviceList:', error)\n                    this.$q.notify({\n                        color: 'negative',\n                        message: `${servicePath} update failed.`,\n                        icon: 'report_problem'\n                    })\n                })\n            console.groupEnd()\n        },\n        connect: function () {\n            console.log('deviceSelected', this.deviceSelected)\n        }\n    },\n    mounted: function () {\n        // console.group('mounted..')\n        this.deviceSelected = this.deviceList[0]\n        // console.groupEnd()\n    },\n    name: 'SettingsSerial'\n}\n</script>\n","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./settingsSerial.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./settingsSerial.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./settingsSerial.vue?vue&type=template&id=e68483ee&\"\nimport script from \"./settingsSerial.vue?vue&type=script&lang=js&\"\nexport * from \"./settingsSerial.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QItemLabel from 'quasar/src/components/item/QItemLabel.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QSpinnerRadio from 'quasar/src/components/spinner/QSpinnerRadio.js';\nimport QSpinnerGears from 'quasar/src/components/spinner/QSpinnerGears.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QPage,QSelect,QItem,QItemSection,QItemLabel,QBtn,QSpinnerRadio,QSpinnerGears,QIcon});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',{staticClass:\"fit column no-wrap justify-center items-center content-center\"},[_c('section',[_c('h2',[_vm._v(\"Serial Settings\")]),_c('q-select',{staticClass:\"q-mr-md\",staticStyle:{\"min-width\":\"12em\",\"background\":\"transparent\"},attrs:{\"rounded\":\"\",\"outlined\":\"\",\"label\":\"Device\",\"option-label\":function (item) { return item.comName; },\"option-value\":function (item) { return item; },\"options\":_vm.deviceList},scopedSlots:_vm._u([{key:\"option\",fn:function(scope){return [_c('q-item',_vm._g(_vm._b({},'q-item',scope.itemProps,false),scope.itemEvents),[_c('q-item-section',[_c('q-item-label',[_vm._v(\"\\n                            \"+_vm._s(scope.opt.comName)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            \"+_vm._s(scope.opt.pnpId)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            \"+_vm._s(scope.opt.manufacturer)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            vendorId:\"+_vm._s(scope.opt.vendorId)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            productId:\"+_vm._s(scope.opt.productId)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            serialNumber:\"+_vm._s(scope.opt.serialNumber)+\"\\n                        \")])],1)],1)]}},{key:\"no-option\",fn:function(){return [_c('q-item',[_c('q-item-section',[_vm._v(\"\\n                        No Devices\\n                    \")])],1)]},proxy:true},{key:\"append\",fn:function(){return [_c('q-btn',{attrs:{\"flat\":\"\",\"round\":\"\",\"dense\":\"\",\"hint\":\"search devices\",\"icon\":\"refresh\"},on:{\"click\":function($event){return _vm.updateSerialDeviceList()}},scopedSlots:_vm._u([{key:\"loading\",fn:function(){return [_c('q-spinner-radio')]},proxy:true}])})]},proxy:true}]),model:{value:(_vm.deviceSelected),callback:function ($$v) {_vm.deviceSelected=$$v},expression:\"deviceSelected\"}}),_c('q-btn',{style:({opacity: (_vm.deviceSelected ? 'inherit' : '0.05')}),attrs:{\"rounded\":\"\",\"icon\":_vm.connected ? 'phonelink_off' : 'phonelink',\"label\":_vm.connected ? 'disconnect' : 'connect',\"disable\":!_vm.deviceSelected},on:{\"click\":function($event){return _vm.connect()}},scopedSlots:_vm._u([{key:\"loading\",fn:function(){return [_c('q-spinner-gears')]},proxy:true},{key:\"after\",fn:function(){return [_c('q-icon',{attrs:{\"name\":\"close\"}})]},proxy:true}])}),_c('debugSection',{attrs:{\"label\":\"list\",\"obj\":_vm.list}}),_c('debugSection',{attrs:{\"label\":\"port\",\"obj\":_vm.port}}),_c('debugSection',{attrs:{\"label\":\"baudRate\",\"obj\":_vm.baudRate}}),_c('debugSection',{attrs:{\"label\":\"serial\",\"obj\":_vm.serial}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <q-page class=\"fit column no-wrap justify-center items-center content-center\">\n        <h1>Global Settings</h1>\n        <section>\n            <q-btn\n                round\n                :color=\"$q.dark.isActive ? 'blue' : 'black'\"\n                icon=\"mdi-lightbulb-on-outline\"\n                @click=\"$q.dark.toggle()\"\n            />\n        </section>\n        <section>\n            <q-btn\n                v-ripple\n                label=\"export harvest to csv on server\"\n                icon=\"mdi-database-export\"\n                @click=\"serverExportToCSV('harvest', 'current_day')\"\n            /><br>\n            <!-- <q-btn\n                v-ripple\n                label=\"import global-config from file\"\n                icon=\"mdi-database-export\"\n                @click=\"serverImport('global-config')\"\n            /><br> -->\n            <q-btn\n                v-ripple\n                label=\"import crop from file\"\n                icon=\"mdi-database-export\"\n                @click=\"importAll()\"\n            /><br>\n            <!-- <q-btn\n                v-ripple\n                label=\"import crop from file\"\n                icon=\"mdi-database-export\"\n                @click=\"serverImport('crop')\"\n            /><br>\n            <q-btn\n                v-ripple\n                label=\"import cropFilter from file\"\n                icon=\"mdi-database-export\"\n                @click=\"serverImport('crop-filter')\"\n            /><br>\n            <q-btn\n                v-ripple\n                label=\"import crate from file\"\n                icon=\"mdi-database-export\"\n                @click=\"serverImport('crate')\"\n            /> -->\n        </section>\n        <settingsSerial />\n        <!-- <section>\n            <q-input\n                filled\n                label=\"pos\"\n                type=\"number\"\n                v-model.number=\"pos\"\n                debounce=\"500\"\n            />\n            <q-input\n                filled\n                label=\"button size (mm)\"\n                type=\"number\"\n                v-model.number=\"btnSize\"\n                debounce=\"500\"\n            />\n            <q-input\n                filled\n                label=\"button spaceing (mm)\"\n                type=\"number\"\n                v-model.number=\"btnSpace\"\n                debounce=\"500\"\n            />\n        </section> -->\n        <!-- <debugSection label=\"globalConfig\" :obj=\"globalConfig\"/> -->\n        <!-- <debugSection label=\"serialDevice\" :obj=\"serialDevice\"/> -->\n        <!-- <debugSection label=\"btnSpace\" :obj=\"btnSpace\"/> -->\n        <debugSection label=\"testthing\" :obj=\"testthing\"/>\n    </q-page>\n</template>\n\n<script>\nimport {\n    // useFind,\n    // useGet,\n    makeFindMixin\n} from 'feathers-vuex'\n// import { mapBindIDItems } from '../store/mapBindIDItems.js'\nimport debugSection from 'components/debugSection'\nimport settingsSerial from 'components/settingsSerial'\n\nexport default {\n    data () {\n        return {\n            testthing: 'hello world'\n        }\n    },\n    computed: {\n        // ...mapBindIDItems('global-config', ['serialDevice', 'pos', 'btnSize', 'btnSpace']),\n        globalConfigParams () {\n            return { query: {} }\n        }\n    },\n    methods: {\n        importAll: function () {\n            this.serverImport('crate')\n            this.serverImport('crop')\n            this.serverImport('crop-filter')\n        },\n        serverExportToCSV: function (servicePath, timeframe) {\n            console.group('serverExportToCSV')\n            this.$q.notify({\n                color: 'info',\n                message: `Export ${servicePath} as CSV on server. Processing now.`,\n                icon: 'info'\n            })\n            this.$FeathersVuex.api.Management.serverExportAsCSV(servicePath, timeframe)\n                .then(response => {\n                    console.log('serverImport: ', response)\n                    this.$q.notify({\n                        color: 'positive',\n                        message: `${servicePath} done.`,\n                        icon: 'info'\n                    })\n                }).catch(error => {\n                    console.error('serverImport:', error)\n                    this.$q.notify({\n                        color: 'negative',\n                        message: `${servicePath} loading failed.`,\n                        icon: 'report_problem'\n                    })\n                })\n            console.groupEnd()\n        },\n        serverImport: function (servicePath) {\n            console.group('serverImport')\n            this.$q.notify({\n                color: 'info',\n                message: `Import ${servicePath} from server. Processing now.`,\n                icon: 'info'\n            })\n            this.$FeathersVuex.api.Management.serverImport(servicePath)\n                .then(response => {\n                    console.log('serverImport: ', response)\n                    this.$q.notify({\n                        color: 'positive',\n                        message: `${servicePath} done.`,\n                        icon: 'info'\n                    })\n                }).catch(error => {\n                    console.error('serverImport:', error)\n                    this.$q.notify({\n                        color: 'negative',\n                        message: `${servicePath} loading failed.`,\n                        icon: 'report_problem'\n                    })\n                })\n            console.groupEnd()\n        }\n    },\n    created: function () {\n        // return mapBindIDItems('global-config', ['serialDevice', 'pos', 'btnSize', 'btnSpace'])\n    },\n    mixins: [\n        makeFindMixin({ service: 'global-config' })\n    ],\n    components: {\n        debugSection,\n        settingsSerial\n    },\n    name: 'PageSettings'\n}\n</script>\n","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Settings.vue?vue&type=template&id=686e5b78&\"\nimport script from \"./Settings.vue?vue&type=script&lang=js&\"\nexport * from \"./Settings.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QInput from 'quasar/src/components/input/QInput.js';import Ripple from 'quasar/src/directives/Ripple.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QPage,QBtn,QInput});qInstall(component, 'directives', {Ripple});\n"],"sourceRoot":""}