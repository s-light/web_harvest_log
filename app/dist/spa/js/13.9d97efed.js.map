{"version":3,"sources":["webpack:///./src/management_func.js","webpack:///./src/pages/Index.vue?44a3","webpack:///src/pages/Index.vue","webpack:///./src/pages/Index.vue?f67b","webpack:///./src/pages/Index.vue","webpack:///./src/store/mapBindIDItems.js"],"names":["importAll","serverImport","removeAll","removeDB","serverExportToCSV","servicePath","timeframe","console","group","$q","notify","color","message","icon","$FeathersVuex","api","Management","serverExportAsCSV","then","response","log","catch","error","groupEnd","removeDBFile","servicePathName","servicePath2servicePathName","serviceStore","entry","remove","serverSystemAction","action","gitPull","startScaleDemo","$store","dispatch","capitalizeFirstLetter","string","charAt","toUpperCase","slice","decapitalizeFirstLetter","toLowerCase","servicePath2modelClassName","modelParts","split","map","item","modelClassName","join","findList","ModelClass","models","params","query","paginate","resultFind","find","gcList","data","mapBindIDItems","entryNames","resultServicePath","resultEntries","reactiveBase","Vue","set","get","entryName","val","id","type","resultUseGet","useGet","model","_id","gcItem","value","create","store","commit","gcItemClone","clone","patch","result","Object","assign"],"mappings":"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","file":"js/13.9d97efed.js","sourcesContent":["\nimport { servicePath2servicePathName } from './store/mapBindIDItems.js'\n\nexport function importAll () {\n    this.serverImport('crate')\n    this.serverImport('crop')\n    this.serverImport('crop-filter')\n}\n\nexport function removeAll () {\n    // this.removeDBFile('crate')\n    // this.removeDBFile('crop')\n    // this.removeDBFile('crop-filter')\n    this.removeDB('crate')\n    this.removeDB('crop')\n    this.removeDB('crop-filter')\n}\n\nexport function serverExportToCSV (servicePath, timeframe) {\n    console.group('serverExportToCSV')\n    this.$q.notify({\n        color: 'info',\n        message: `Export ${servicePath} as CSV on server. Processing now.`,\n        icon: 'info'\n    })\n    this.$FeathersVuex.api.Management.serverExportAsCSV(servicePath, timeframe)\n        .then(response => {\n            console.log('serverImport: ', response)\n            this.$q.notify({\n                color: 'positive',\n                message: `${servicePath} done.`,\n                icon: 'info'\n            })\n        }).catch(error => {\n            console.error('serverImport:', error)\n            this.$q.notify({\n                color: 'negative',\n                message: `${servicePath} loading failed.`,\n                icon: 'report_problem'\n            })\n        })\n    console.groupEnd()\n}\n\nexport function serverImport (servicePath) {\n    console.group('serverImport')\n    this.$q.notify({\n        color: 'info',\n        message: `Import ${servicePath} from server. Processing now.`,\n        icon: 'info'\n    })\n    this.$FeathersVuex.api.Management.serverImport(servicePath)\n        .then(response => {\n            console.log('serverImport: ', response)\n            this.$q.notify({\n                color: 'positive',\n                message: `${servicePath} done.`,\n                icon: 'info'\n            })\n        }).catch(error => {\n            console.error('serverImport:', error)\n            this.$q.notify({\n                color: 'negative',\n                message: `${servicePath} loading failed.`,\n                icon: 'report_problem'\n            })\n        })\n    console.groupEnd()\n}\n\nexport function removeDBFile (servicePath) {\n    console.group('removeDBFile')\n    this.$q.notify({\n        color: 'info',\n        message: `remove ${servicePath} db from server. Processing now.`,\n        icon: 'info'\n    })\n    this.$FeathersVuex.api.Management.removeDBFile(servicePath)\n        .then(response => {\n            console.log('removeDBFile: ', response)\n            this.$q.notify({\n                color: 'positive',\n                message: `${servicePath} done.`,\n                icon: 'info'\n            })\n        }).catch(error => {\n            console.error('removeDBFile:', error)\n            this.$q.notify({\n                color: 'negative',\n                message: `${servicePath} removing failed.`,\n                icon: 'report_problem'\n            })\n        })\n    console.groupEnd()\n}\n\nexport function removeDB (servicePath) {\n    console.group('removeDB', servicePath)\n    this.$q.notify({\n        color: 'info',\n        message: `remove all entries from ${servicePath}. Processing now.`,\n        icon: 'info'\n    })\n    const servicePathName = servicePath2servicePathName(servicePath)\n    const serviceStore = this.[servicePathName]\n    // console.log(this)\n    console.log('serviceStore', serviceStore)\n    for (var entry of serviceStore) {\n        console.log(entry)\n        entry.remove()\n    }\n    this.$q.notify({\n        color: 'positive',\n        message: `${servicePath} done.`,\n        // timeout: 30500,\n        icon: 'info'\n    })\n    console.groupEnd()\n}\n\nexport function serverSystemAction (action) {\n    console.group('serverSystemAction', action)\n    this.$q.notify({\n        color: 'info',\n        message: `initiated server system action '${action}'`,\n        icon: 'info'\n    })\n    this.$FeathersVuex.api.Management.serverSystemAction(action)\n        .then(response => {\n            console.log('serverSystemAction: ', response)\n            this.$q.notify({\n                color: 'positive',\n                message: `server system action '${action}' running. \\n '${response}'`,\n                icon: 'info'\n            })\n        }).catch(error => {\n            console.error('serverSystemAction:', error)\n            this.$q.notify({\n                color: 'negative',\n                message: `'${action}' failed. '${error}'`,\n                icon: 'report_problem'\n            })\n        })\n    console.groupEnd()\n}\n\nexport function gitPull () {\n    console.group('gitPull')\n    this.$q.notify({\n        color: 'info',\n        message: 'pull software updates',\n        icon: 'info'\n    })\n    this.$FeathersVuex.api.Management.gitPull()\n        .then(response => {\n            console.log('gitPull: ', response)\n            this.$q.notify({\n                color: 'positive',\n                message: `gitPull successful. '${response}'`,\n                icon: 'info'\n            })\n        }).catch(error => {\n            console.error('gitPull:', error)\n            this.$q.notify({\n                color: 'negative',\n                message: `gitPull failed. '${error}'`,\n                icon: 'report_problem'\n            })\n        })\n    console.groupEnd()\n}\n\nexport function startScaleDemo () {\n    // this.$FeathersVuex.api.Serial\n    // if (!model.demoHandler) {\n    //     model.demoHandler = new ScaleDemoGenerator(model.store)\n    // }\n    // model.demoHandler.start()\n    // model.store.commit('localconfig/setScaleUnit', 'kg')\n    this.$store.dispatch('localconfig/startScaleDemo').then(response => {\n        console.log('startScaleDemo: ', response)\n        this.$q.notify({\n            color: 'positive',\n            message: 'startScaleDemo done.',\n            icon: 'info'\n        })\n    }).catch(error => {\n        console.error('startScaleDemo:', error)\n        this.$q.notify({\n            color: 'negative',\n            message: 'startScaleDemo failed.',\n            icon: 'report_problem'\n        })\n    })\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',{staticClass:\"fit column no-wrap justify-center items-center content-center\"},[_c('section',{staticClass:\"q-pa-md row justify-center\"},[_c('h1',[_vm._v(\"Web Harvest Log\")])]),_c('section',{staticClass:\"text-center\"},[_c('h1',[_vm._v(\"\\n            \"+_vm._s(_vm._f(\"formatdate\")(_vm.time,\"HH:mm:ss\"))+\"\\n        \")]),_c('h1',[_vm._v(\"\\n            \"+_vm._s(_vm._f(\"formatdate\")(_vm.time,\"DD.MM.YYYY\"))+\"\\n        \")])]),_c('section',[_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('shutdown_system'),\"icon\":\"mdi-dock-window\"},on:{\"click\":function($event){return _vm.serverSystemAction('shutdown')}}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <!-- <q-page class=\"flex flex-center\"> -->\n    <q-page class=\"fit column no-wrap justify-center items-center content-center\">\n        <section class=\"q-pa-md row justify-center\">\n            <h1>Web Harvest Log</h1>\n        </section>\n        <section class=\"text-center\">\n            <h1>\n                {{ time | formatdate(\"HH:mm:ss\") }}\n            </h1>\n            <h1>\n                {{ time | formatdate(\"DD.MM.YYYY\") }}\n            </h1>\n        </section>\n        <section>\n            <!-- <q-btn\n                v-ripple\n                label=\"open this in a new minimal window\"\n                icon=\"mdi-dock-window\"\n                @click=\"openInNewWindow()\"\n            /> -->\n            <q-btn\n                v-ripple\n                :label=\"$t('shutdown_system')\"\n                icon=\"mdi-dock-window\"\n                @click=\"serverSystemAction('shutdown')\"\n            />\n        </section>\n    </q-page>\n</template>\n\n<script>\nimport { date } from 'quasar'\nimport {\n    serverSystemAction\n} from '../management_func.js'\n\nexport default {\n    data () {\n        return {\n            url: 'https://github.com/s-light/quasar_with_featherjs/',\n            windowObjectReference: null,\n            time: new Date()\n        }\n    },\n    methods: {\n        serverSystemAction: serverSystemAction,\n        // openInNewWindow () {\n        //     // https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n        //     if (this.windowObjectReference == null || this.windowObjectReference.closed) {\n        //         this.windowObjectReference = window.open(\n        //             window.location,\n        //             'Harvest Log',\n        //             `\n        //                 resizable=yes,\n        //                 scrollbars=yes,\n        //                 menubar=no,\n        //                 toolbar=no,\n        //                 locationr=no,\n        //                 status=no\n        //             `)\n        //     } else {\n        //         this.windowObjectReference.focus()\n        //     };\n        // }\n        updateTime () {\n            this.time = new Date()\n        }\n    },\n    filters: {\n        formatdate (value, format = 'HH:mm:ss DD.MM.YYYY') {\n            // 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n            return date.formatDate(new Date(value), format)\n        },\n        toLocal (value, lang = 'de') {\n            return new Date(value).toLocaleString(lang)\n        }\n    },\n    mounted () {\n        setInterval(this.updateTime, 1000)\n    },\n    name: 'PageIndex'\n}\n</script>\n","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Index.vue?vue&type=template&id=79e477bf&\"\nimport script from \"./Index.vue?vue&type=script&lang=js&\"\nexport * from \"./Index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';import Ripple from 'quasar/src/directives/Ripple.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QPage,QBtn});qInstall(component, 'directives', {Ripple});\n","// inspired by mapBind.js\n// https://vuex.feathersjs.com/feathers-vuex-forms.html#feathersvuexinputwrapper\n\n// ------------------------------------------\n// usage:\n// import { mapBindIDItems } from 'store/mapBindIDItems.js'\n//\n// export default {\n//     name: 'ComponentName',\n//     computed: {\n//         ...mapBindIDItems('global-config', ['serialDevice', 'someOtherThing'])\n//     },\n// }\n\nimport Vue from 'vue'\nimport {\n    // useFind,\n    useGet\n} from 'feathers-vuex'\nimport {\n// import feathersClient, {\n    models\n} from '../feathers-client'\n\nexport function capitalizeFirstLetter (string) {\n    // https://stackoverflow.com/questions/1026069/how-do-i-make-the-first-letter-of-a-string-uppercase-in-javascript\n    return string.charAt(0).toUpperCase() + string.slice(1)\n}\nexport function decapitalizeFirstLetter (string) {\n    return string.charAt(0).toLowerCase() + string.slice(1)\n}\n\nexport function servicePath2modelClassName (servicePath) {\n    let modelParts = servicePath.split('-')\n    modelParts = modelParts.map(item => { return capitalizeFirstLetter(item) })\n    // console.log('modelParts', modelParts)\n    const modelClassName = modelParts.join('')\n    return modelClassName\n}\n\nexport function servicePath2servicePathName (servicePath) {\n    const modelClassName = servicePath2modelClassName(servicePath)\n    const servicePathName = decapitalizeFirstLetter(modelClassName)\n    return servicePathName\n}\n\nexport const findList = async function (servicePath) {\n    const modelClassName = servicePath2modelClassName(servicePath)\n    const ModelClass = models.api[modelClassName]\n    const params = {\n        query: {},\n        paginate: false\n    }\n    const resultFind = await ModelClass.find(params)\n    const gcList = resultFind.data\n    return gcList\n}\n\nexport const mapBindIDItems = function (servicePath, entryNames) {\n    // helper function for vuex\n    // create setter and getter functions for given store and properties\n\n    // ------------------------------------------\n    // global\n    const resultServicePath = {}\n    const resultEntries = {}\n\n    // console.log('models.api', models.api)\n    // const ModelClass = this.$FeathersVuex.api[servicePath2modelClassName(servicePath)]\n    const modelClassName = servicePath2modelClassName(servicePath)\n    // console.log('modelClassName', modelClassName)\n    const ModelClass = models.api[modelClassName]\n    // console.log('ModelClass', ModelClass)\n    const servicePathName = decapitalizeFirstLetter(modelClassName)\n\n    // ------------------------------------------\n    // prepare empty base\n    const reactiveBase = {}\n    Vue.set(reactiveBase, 'gcList', {})\n    resultServicePath[servicePathName] = {\n        get: function () {\n            return reactiveBase.gcList\n        }\n    }\n\n    for (const entryName of entryNames) {\n        resultEntries[entryName] = {\n            get: function () {\n                return null\n            },\n            set: function (val) {\n            }\n        }\n    }\n\n    // ------------------------------------------\n    // servicePath setup\n    const params = {\n        query: {},\n        paginate: false\n    }\n    ModelClass.find(params).then((resultFind) => {\n        for (const item of resultFind.data) {\n            reactiveBase.gcList[item.id] = item\n        }\n    }).catch((error) => {\n        // console.error(error.message, error)\n        console.error(error.type, error.message)\n    })\n\n    // ------------------------------------------\n    // entryNames setup\n    for (const entryName of entryNames) {\n        // get from server and store\n        const resultUseGet = useGet({\n            model: ModelClass,\n            id: entryName,\n            _id: entryName\n        })\n        let gcItem = resultUseGet.item.value\n        // check if item exists\n        if (!gcItem) {\n            // create new item\n            const data = {\n                id: entryName,\n                _id: entryName,\n                value: null\n            }\n            gcItem = new ModelClass(data)\n            // gcItem.create().catch((error) => {\n            //     console.log('mapBindIDItems: create - ' + error.message, error)\n            // })\n            gcItem.create().catch((error) => {\n                console.error('mapBindIDItems: create - ', error.type, error.message)\n                // console.log('gcItem', gcItem)\n                // console.log('ModelClass', ModelClass)\n                // console.log('ModelClass.store.commit', ModelClass.store.commit)\n                // console.log(`ModelClass.store.commit '${ModelClass.store.commit}'`)\n                console.log('→ manually commit mutation *addItem*')\n                ModelClass.store.commit(servicePath + '/addItem', data)\n            })\n        }\n        const gcItemClone = gcItem.clone()\n        resultEntries[entryName].get = function () {\n            return gcItemClone.value\n        }\n        resultEntries[entryName].set = function (val) {\n            gcItemClone.value = val\n            gcItemClone.commit()\n            gcItem.patch({ data: { value: val } })\n        }\n    }\n    const result = Object.assign({}, resultServicePath, resultEntries)\n    return result\n}\n"],"sourceRoot":""}