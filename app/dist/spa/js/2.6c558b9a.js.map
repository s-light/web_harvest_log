{"version":3,"sources":["webpack:///./src/components/debugSection.vue?a621","webpack:///./src/management_func.js","webpack:///./src/store/mapBind.js","webpack:///./src/components/debugSection.vue?b84a","webpack:///./src/components/debugSection.vue?1f76","webpack:///src/components/debugSection.vue","webpack:///./src/components/debugSection.vue","webpack:///./src/pages/Debug.vue?2039","webpack:///src/components/settingsSerial.vue","webpack:///./src/components/settingsSerial.vue?3cd9","webpack:///./src/components/settingsSerial.vue","webpack:///./src/components/settingsSerial.vue?6c17","webpack:///./src/pages/Debug.vue?610d","webpack:///src/pages/Debug.vue","webpack:///./src/pages/Debug.vue","webpack:///./src/store/mapBindIDItems.js"],"names":["importAll","this","serverImport","removeAll","removeDB","serverExportToCSV","servicePath","timeframe","console","group","$q","notify","color","message","html","$FeathersVuex","api","Management","serverExportAsCSV","then","response","log","type","catch","error","groupEnd","removeDBFile","serviceStore","servicePath2servicePathName","entry","remove","serverSystemAction","action","resultMessage","result","Array","isArray","resp","stdout","gitPull","respPart","startScaleDemo","$store","dispatch","mapBind","base","params","map","mapState","key","value","Object","entries","get","set","val","mutationName","string","charAt","toUpperCase","slice","commit","component","_h","$createElement","_c","_self","staticClass","_v","_s","label","_f","_vm","obj","dummyResponder","attrs","item","comName","deviceList","scopedSlots","_u","fn","scope","_g","_b","itemProps","itemEvents","opt","pnpId","manufacturer","vendorId","productId","serialNumber","proxy","on","$event","updateSerialDeviceList","model","callback","$$v","deviceSelected","expression","style","opacity","connected","connect","list","port","baudRate","serial","QPage","QSelect","QItem","QItemSection","QItemLabel","QBtn","QSpinnerRadio","QSpinnerGears","QIcon","$t","platform","dark","isActive","toggle","directives","name","rawName","keypadVisible","devMode","btnSize","_n","btnSizeFilter","btnSpace","testthing","QToggle","QInput","Ripple","decapitalizeFirstLetter","toLowerCase","servicePath2modelClassName","modelParts","split","join","mapBindIDItems","entryNames","resultServicePath","resultEntries","modelClassName","ModelClass","models","servicePathName","reactiveBase","Vue","gcList","entryName","find","query","paginate","resultFind","data","id","gcItem","useGet","_id","create","store","gcItemClone","clone","patch","assign"],"mappings":"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","file":"js/2.6c558b9a.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-2-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-2-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-2-2!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./debugSection.vue?vue&type=style&index=0&media=screen&lang=css&\"","\nimport { servicePath2servicePathName } from './store/mapBindIDItems.js'\n\nexport function importAll () {\n    this.serverImport('crate')\n    this.serverImport('crop')\n    this.serverImport('crop-filter')\n}\n\nexport function removeAll () {\n    // this.removeDBFile('crate')\n    // this.removeDBFile('crop')\n    // this.removeDBFile('crop-filter')\n    this.removeDB('crate')\n    this.removeDB('crop')\n    this.removeDB('crop-filter')\n}\n\nexport function serverExportToCSV (servicePath, timeframe) {\n    console.group('serverExportToCSV')\n    this.$q.notify({\n        color: 'info',\n        message: `Export ${servicePath} as CSV on server. Processing now.`,\n        html: true\n    })\n    this.$FeathersVuex.api.Management.serverExportAsCSV(servicePath, timeframe)\n        .then(response => {\n            console.log('serverImport: ', response)\n            this.$q.notify({\n                type: 'positive',\n                message: `${servicePath} done.`,\n                html: true\n            })\n        }).catch(error => {\n            console.error('serverImport:', error)\n            this.$q.notify({\n                type: 'negative',\n                message: `${servicePath} loading failed.`,\n                html: true\n            })\n        })\n    console.groupEnd()\n}\n\nexport function serverImport (servicePath) {\n    console.group('serverImport')\n    this.$q.notify({\n        color: 'info',\n        message: `Import ${servicePath} from server. Processing now.`,\n        html: true\n    })\n    this.$FeathersVuex.api.Management.serverImport(servicePath)\n        .then(response => {\n            console.log('serverImport: ', response)\n            this.$q.notify({\n                type: 'positive',\n                message: `${servicePath} done.`,\n                html: true\n            })\n        }).catch(error => {\n            console.error('serverImport:', error)\n            this.$q.notify({\n                type: 'negative',\n                message: `${servicePath} loading failed.`,\n                html: true\n            })\n        })\n    console.groupEnd()\n}\n\nexport function removeDBFile (servicePath) {\n    console.group('removeDBFile')\n    this.$q.notify({\n        color: 'info',\n        message: `remove ${servicePath} db from server. Processing now.`,\n        html: true\n    })\n    this.$FeathersVuex.api.Management.removeDBFile(servicePath)\n        .then(response => {\n            console.log('removeDBFile: ', response)\n            this.$q.notify({\n                type: 'positive',\n                message: `${servicePath} done.`,\n                html: true\n            })\n        }).catch(error => {\n            console.error('removeDBFile:', error)\n            this.$q.notify({\n                type: 'negative',\n                message: `${servicePath} removing failed.`,\n                html: true\n            })\n        })\n    console.groupEnd()\n}\n\nexport function removeDB (servicePath) {\n    console.group('removeDB', servicePath)\n    this.$q.notify({\n        color: 'info',\n        message: `remove all entries from ${servicePath}. Processing now.`,\n        html: true\n    })\n    const servicePathName = servicePath2servicePathName(servicePath)\n    const serviceStore = this.[servicePathName]\n    // console.log(this)\n    console.log('serviceStore', serviceStore)\n    for (var entry of serviceStore) {\n        console.log(entry)\n        entry.remove()\n    }\n    this.$q.notify({\n        type: 'positive',\n        message: `${servicePath} done.`,\n        // timeout: 30500,\n        html: true\n    })\n    console.groupEnd()\n}\n\nexport function serverSystemAction (action) {\n    console.group('serverSystemAction', action)\n    this.$q.notify({\n        color: 'info',\n        message: `initiated server system action '${action}'`,\n        html: true\n    })\n    this.$FeathersVuex.api.Management.serverSystemAction(action)\n        .then(response => {\n            console.log('serverSystemAction: ', response)\n            let resultMessage = ''\n            if (response.result) {\n                if (Array.isArray(response.result)) {\n                    for (const resp of response.result) {\n                        resultMessage += '\\n' + resp.stdout\n                    }\n                } else {\n                    resultMessage = response.result.stdout\n                }\n            }\n            console.log('resultMessage: ', resultMessage)\n            let message = `server system action '${action}' done.`\n            if (resultMessage) {\n                message += `\\n<br> '${resultMessage}'`\n            }\n            this.$q.notify({\n                type: 'positive',\n                message,\n                html: true\n            })\n        }).catch((error) => {\n            console.error('serverSystemAction:\\n', error)\n            // console.log(error.message)\n            this.$q.notify({\n                type: 'negative',\n                message: `'${action}' failed. \\n<br> '${error}'`,\n                html: true\n            })\n        })\n    console.groupEnd()\n}\n\nexport function gitPull () {\n    const action = 'gitPull'\n    console.group(action)\n    this.$q.notify({\n        color: 'info',\n        message: 'pull software updates',\n        html: true\n    })\n    this.$FeathersVuex.api.Management.gitPull()\n        .then(response => {\n            console.log('gitPull: ', response)\n            let resultMessage = ''\n            if (response.result) {\n                if (Array.isArray(response.result)) {\n                    for (const resp of response.result) {\n                        for (const respPart of resp.stdout) {\n                            resultMessage += respPart + '\\n<br>'\n                        }\n                    }\n                    // console.log('resultMessage: ', resultMessage)\n                    // resultMessage = resultMessage.replace('\\n', '\\n<br> ')\n                } else {\n                    resultMessage = response.result.stdout\n                }\n            }\n            console.log('resultMessage: ', resultMessage)\n            let message = `'${action}' successful.`\n            if (resultMessage) {\n                message += `\\n<br> ${resultMessage}`\n            }\n            console.log('message: ', message)\n            this.$q.notify({\n                type: 'positive',\n                message,\n                html: true\n            })\n        }).catch(error => {\n            console.error(action, ': ', error)\n            this.$q.notify({\n                type: 'negative',\n                message: `'${action}' failed. \\n<br> '${error}'`,\n                html: true\n            })\n        })\n    console.groupEnd()\n}\n\nexport function startScaleDemo () {\n    // this.$FeathersVuex.api.Serial\n    // if (!model.demoHandler) {\n    //     model.demoHandler = new ScaleDemoGenerator(model.store)\n    // }\n    // model.demoHandler.start()\n    // model.store.commit('localconfig/setScaleUnit', 'kg')\n    this.$store.dispatch('localconfig/startScaleDemo').then(response => {\n        console.log('startScaleDemo: ', response)\n        this.$q.notify({\n            type: 'positive',\n            message: 'startScaleDemo done.',\n            html: true\n        })\n    }).catch(error => {\n        console.error('startScaleDemo:', error)\n        this.$q.notify({\n            type: 'negative',\n            message: 'startScaleDemo failed.',\n            html: true\n        })\n    })\n}\n","// ------------------------------------------\n// usage:\n// import { mapBind } from 'store/mapBind.js'\n//\n// export default {\n//     name: 'ComponentName',\n//     computed: {\n//         ...mapBind('appconfig', ['globalMessage', 'someOtherThing'])\n//     },\n// }\n\n// inspired by https://stackoverflow.com/a/48447361/574981\n\nimport { mapState } from 'vuex'\n\n// export const mapBind = (base, params = {}) => (\n// export const mapBind = (base, params) => (\nexport const mapBind = function (base, params) {\n    // helper function for vuex\n    // create setter and getter functions for given store and properties\n    function capitalizeFirstLetter (string) {\n        // https://stackoverflow.com/questions/1026069/how-do-i-make-the-first-letter-of-a-string-uppercase-in-javascript\n        return string.charAt(0).toUpperCase() + string.slice(1)\n    }\n\n    const map = mapState(base, params)\n    const result = {}\n    // console.log(map)\n    for (const [key, value] of Object.entries(map)) {\n        // console.log('key', key)\n        // console.log('value', value)\n        result[key] = {\n            get: value\n        }\n        result[key].set = function (val) {\n            // this.$store.commit('appconfig/setGlobalMessage', val)\n            const mutationName = 'set' + capitalizeFirstLetter(key)\n            this.$store.commit(base + '/' + mutationName, val)\n        }\n    }\n    // console.log(result)\n    return result\n// )\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"debug\"},[_c('label',[_vm._v(_vm._s(_vm.label))]),_c('pre',[_vm._v(_vm._s(_vm._f(\"pretty\")(_vm.obj)))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./debugSection.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./debugSection.vue?vue&type=script&lang=js&\"","\n<!-- usage:\n\n<DebugSection :obj=\"myValueToDebug\"/>\n\n-->\n\n<template>\n    <section class=\"debug\">\n        <label>{{ label }}</label>\n        <pre>{{ obj | pretty }}</pre>\n    </section>\n</template>\n\n<script>\nexport default {\n    // name: 'debugSection',\n    props: {\n        obj: {\n            // type: [Object, Array, String, Num    ],\n            default: function () {\n                return {}\n            }\n        },\n        label: {\n            type: String,\n            default: ''\n        }\n    },\n    data () {\n        return {}\n    },\n    filters: {\n        pretty: function (value) {\n            let valueJson = value\n            try {\n                valueJson = JSON.parse(value)\n            } catch (e) {\n                // console.log(value, e)\n            }\n            return JSON.stringify(valueJson, null, 4)\n        }\n    }\n}\n</script>\n\n<style media=\"screen\">\nsection.debug {\n    min-width: 4em;\n    min-height: 2em;\n    background-color: hsla(230.1, 100%, 50%, 0.05);\n    border-radius: 0.5em;\n    box-shadow: 0 0 20px hsla(200, 100%, 50%, 0.2);\n    margin: 1em;\n    padding: 1em;\n}\nsection.debug label {\n    opacity: 0.5\n}\nsection.debug pre {\n    margin: 0;\n    padding: 0;\n}\n</style>\n","import { render, staticRenderFns } from \"./debugSection.vue?vue&type=template&id=b2731162&\"\nimport script from \"./debugSection.vue?vue&type=script&lang=js&\"\nexport * from \"./debugSection.vue?vue&type=script&lang=js&\"\nimport style0 from \"./debugSection.vue?vue&type=style&index=0&media=screen&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',{staticClass:\"fit column no-wrap justify-center items-center content-center\"},[_c('h1',[_vm._v(\"\\n        \"+_vm._s(_vm.$t('information'))+\"\\n        \"+_vm._s(_vm.$t('for'))+\"\\n        \"+_vm._s(_vm.$t('developer'))+\"\\n    \")]),_c('debugSection',{attrs:{\"label\":\"platform\",\"obj\":this.$q.platform}}),_c('section',[_c('q-btn',{attrs:{\"round\":\"\",\"color\":_vm.$q.dark.isActive ? 'blue' : 'black',\"icon\":\"mdi-lightbulb-on-outline\"},on:{\"click\":function($event){return _vm.$q.dark.toggle()}}}),_c('br'),_c('q-btn',{attrs:{\"flat\":\"\",\"round\":\"\",\"icon\":_vm.$q.dark.isActive ? 'brightness_2' : 'brightness_5'},on:{\"click\":function($event){return _vm.$q.dark.toggle()}}})],1),_c('section',[_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('database_harvest_export_csv'),\"icon\":\"mdi-database-export\"},on:{\"click\":function($event){return _vm.serverExportToCSV('harvest', 'current_day')}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('database_config_import_all'),\"icon\":\"mdi-database-import\"},on:{\"click\":function($event){return _vm.importAll()}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":\"import crop from file\",\"icon\":\"mdi-database-import\"},on:{\"click\":function($event){return _vm.serverImport('crop')}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":\"import cropFilter from file\",\"icon\":\"mdi-database-import\"},on:{\"click\":function($event){return _vm.serverImport('crop-filter')}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":\"import crate from file\",\"icon\":\"mdi-database-import\"},on:{\"click\":function($event){return _vm.serverImport('crate')}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('database_config_clean'),\"icon\":\"mdi-database-remove\"},on:{\"click\":function($event){return _vm.removeAll()}}}),_c('br'),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('pull_updates'),\"icon\":\"mdi-download\"},on:{\"click\":function($event){return _vm.gitPull()}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('reboot_system'),\"icon\":\"mdi-restart\"},on:{\"click\":function($event){return _vm.serverSystemAction('reboot')}}}),_c('br'),_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"label\":_vm.$t('shutdown_system'),\"icon\":\"mdi-power\"},on:{\"click\":function($event){return _vm.serverSystemAction('shutdown')}}}),_c('br')],1),_c('section',[_c('q-toggle',{attrs:{\"size\":\"xl\",\"label\":\"Experimental Keypad\"},model:{value:(_vm.keypadVisible),callback:function ($$v) {_vm.keypadVisible=$$v},expression:\"keypadVisible\"}}),_c('br'),_c('q-toggle',{attrs:{\"size\":\"xl\",\"label\":\"Dev Mode\"},model:{value:(_vm.devMode),callback:function ($$v) {_vm.devMode=$$v},expression:\"devMode\"}})],1),_c('section',[_c('q-input',{attrs:{\"filled\":\"\",\"label\":\"button size (mm)\",\"type\":\"number\",\"debounce\":\"500\"},model:{value:(_vm.btnSize),callback:function ($$v) {_vm.btnSize=_vm._n($$v)},expression:\"btnSize\"}}),_c('q-input',{attrs:{\"filled\":\"\",\"label\":\"button filter size (mm)\",\"type\":\"number\",\"debounce\":\"500\"},model:{value:(_vm.btnSizeFilter),callback:function ($$v) {_vm.btnSizeFilter=_vm._n($$v)},expression:\"btnSizeFilter\"}}),_c('q-input',{attrs:{\"filled\":\"\",\"label\":\"button spaceing (mm)\",\"type\":\"number\",\"debounce\":\"500\"},model:{value:(_vm.btnSpace),callback:function ($$v) {_vm.btnSpace=_vm._n($$v)},expression:\"btnSpace\"}})],1),_c('settingsSerial'),_c('debugSection',{attrs:{\"label\":\"testthing\",\"obj\":_vm.testthing}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <q-page class=\"fit column no-wrap justify-center items-center content-center\">\n        <section>\n            <h2>Serial Settings</h2>\n            <!-- :disable=\"connected\" -->\n            <q-select\n                rounded\n                outlined\n                class=\"q-mr-md\"\n                label=\"Device\"\n                v-model=\"deviceSelected\"\n                :option-label=\"(item) => item.comName\"\n                :option-value=\"(item) => item\"\n                :options=\"deviceList\"\n            >\n                <template v-slot:option=\"scope\">\n                    <q-item\n                        v-bind=\"scope.itemProps\"\n                        v-on=\"scope.itemEvents\"\n                    >\n                        <q-item-section>\n                            <q-item-label>\n                                {{ scope.opt.comName }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                {{ scope.opt.pnpId }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                {{ scope.opt.manufacturer }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                vendorId:{{ scope.opt.vendorId }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                productId:{{ scope.opt.productId }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                serialNumber:{{ scope.opt.serialNumber }}\n                            </q-item-label>\n                        </q-item-section>\n                    </q-item>\n                </template>\n                <template v-slot:no-option>\n                    <q-item>\n                        <q-item-section>\n                            No Devices\n                        </q-item-section>\n                    </q-item>\n                </template>\n                <template v-slot:append>\n                    <!-- :disable=\"connected\"\n                    :loading=\"deviceSearching\" -->\n                    <q-btn\n                        flat\n                        round\n                        dense\n                        hint=\"search devices\"\n                        icon=\"refresh\"\n                        @click=\"updateSerialDeviceList()\"\n                    >\n                        <template v-slot:loading>\n                            <q-spinner-radio />\n                        </template>\n                    </q-btn>\n                </template>\n            </q-select>\n\n            <!-- :loading=\"deviceConnecting\" -->\n            <q-btn\n                rounded\n                :icon=\"connected ? 'phonelink_off' : 'phonelink'\"\n                :style=\"{opacity: (deviceSelected ? 'inherit' : '0.05')}\"\n                @click=\"connect()\"\n                :label=\"connected ? 'disconnect' : 'connect'\"\n                :disable=\"!deviceSelected\"\n            >\n                <template v-slot:loading>\n                    <q-spinner-gears />\n                </template>\n                <template v-slot:after>\n                    <q-icon\n                        name=\"close\"\n                    />\n                </template>\n            </q-btn>\n            <debugSection label=\"list\" :obj=\"list\"/>\n            <debugSection label=\"port\" :obj=\"port\"/>\n            <debugSection label=\"baudRate\" :obj=\"baudRate\"/>\n            <debugSection label=\"serial\" :obj=\"serial\"/>\n        </section>\n    </q-page>\n</template>\n\n<script>\nimport {\n    // useFind,\n    // useGet,\n    makeFindMixin\n} from 'feathers-vuex'\nimport { mapBindIDItems } from '../store/mapBindIDItems.js'\nimport DebugSection from 'components/debugSection'\n\nconst dummyResponder = {\n    vendorId: -1,\n    productId: -1,\n    comName: '/dummyResponder/0',\n    pnpId: -1,\n    locationId: -1,\n    serialNumber: '42',\n    manufacturer: 's-light.eu',\n    product: 'dummyResponder',\n    release: undefined,\n    interface: undefined,\n    usagePage: undefined,\n    usage: undefined\n}\n\nexport default {\n    data () {\n        return {\n            deviceSelected: {},\n            deviceList: [dummyResponder]\n        }\n    },\n    components: { DebugSection },\n    mixins: [\n        makeFindMixin({ service: 'serial' })\n    ],\n    computed: {\n        serialParams () {\n            return { query: {} }\n        },\n        ...mapBindIDItems('serial', ['list', 'port', 'baudRate', 'connected'])\n    },\n    methods: {\n        updateSerialDeviceList: function () {\n            console.group('serverExportToCSV')\n            const servicePath = 'serial'\n            this.$q.notify({\n                color: 'info',\n                message: `update ${servicePath} device list. Processing now.`,\n                icon: 'info'\n            })\n            this.$FeathersVuex.api.Management.updateSerialDeviceList()\n                .then(response => {\n                    console.log('updateSerialDeviceList: ', response)\n                    this.$q.notify({\n                        color: 'positive',\n                        message: `${servicePath} done.`,\n                        icon: 'info'\n                    })\n                }).catch(error => {\n                    console.error('updateSerialDeviceList:', error)\n                    this.$q.notify({\n                        color: 'negative',\n                        message: `${servicePath} update failed.`,\n                        icon: 'report_problem'\n                    })\n                })\n            console.groupEnd()\n        },\n        connect: function () {\n            console.log('deviceSelected', this.deviceSelected)\n        }\n    },\n    mounted: function () {\n        // console.group('mounted..')\n        this.deviceSelected = this.deviceList[0]\n        // console.groupEnd()\n    },\n    name: 'SettingsSerial'\n}\n</script>\n","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./settingsSerial.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./settingsSerial.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./settingsSerial.vue?vue&type=template&id=c4e13048&\"\nimport script from \"./settingsSerial.vue?vue&type=script&lang=js&\"\nexport * from \"./settingsSerial.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QItemLabel from 'quasar/src/components/item/QItemLabel.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QSpinnerRadio from 'quasar/src/components/spinner/QSpinnerRadio.js';\nimport QSpinnerGears from 'quasar/src/components/spinner/QSpinnerGears.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QPage,QSelect,QItem,QItemSection,QItemLabel,QBtn,QSpinnerRadio,QSpinnerGears,QIcon});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',{staticClass:\"fit column no-wrap justify-center items-center content-center\"},[_c('section',[_c('h2',[_vm._v(\"Serial Settings\")]),_c('q-select',{staticClass:\"q-mr-md\",attrs:{\"rounded\":\"\",\"outlined\":\"\",\"label\":\"Device\",\"option-label\":function (item) { return item.comName; },\"option-value\":function (item) { return item; },\"options\":_vm.deviceList},scopedSlots:_vm._u([{key:\"option\",fn:function(scope){return [_c('q-item',_vm._g(_vm._b({},'q-item',scope.itemProps,false),scope.itemEvents),[_c('q-item-section',[_c('q-item-label',[_vm._v(\"\\n                            \"+_vm._s(scope.opt.comName)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            \"+_vm._s(scope.opt.pnpId)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            \"+_vm._s(scope.opt.manufacturer)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            vendorId:\"+_vm._s(scope.opt.vendorId)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            productId:\"+_vm._s(scope.opt.productId)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            serialNumber:\"+_vm._s(scope.opt.serialNumber)+\"\\n                        \")])],1)],1)]}},{key:\"no-option\",fn:function(){return [_c('q-item',[_c('q-item-section',[_vm._v(\"\\n                        No Devices\\n                    \")])],1)]},proxy:true},{key:\"append\",fn:function(){return [_c('q-btn',{attrs:{\"flat\":\"\",\"round\":\"\",\"dense\":\"\",\"hint\":\"search devices\",\"icon\":\"refresh\"},on:{\"click\":function($event){return _vm.updateSerialDeviceList()}},scopedSlots:_vm._u([{key:\"loading\",fn:function(){return [_c('q-spinner-radio')]},proxy:true}])})]},proxy:true}]),model:{value:(_vm.deviceSelected),callback:function ($$v) {_vm.deviceSelected=$$v},expression:\"deviceSelected\"}}),_c('q-btn',{style:({opacity: (_vm.deviceSelected ? 'inherit' : '0.05')}),attrs:{\"rounded\":\"\",\"icon\":_vm.connected ? 'phonelink_off' : 'phonelink',\"label\":_vm.connected ? 'disconnect' : 'connect',\"disable\":!_vm.deviceSelected},on:{\"click\":function($event){return _vm.connect()}},scopedSlots:_vm._u([{key:\"loading\",fn:function(){return [_c('q-spinner-gears')]},proxy:true},{key:\"after\",fn:function(){return [_c('q-icon',{attrs:{\"name\":\"close\"}})]},proxy:true}])}),_c('debugSection',{attrs:{\"label\":\"list\",\"obj\":_vm.list}}),_c('debugSection',{attrs:{\"label\":\"port\",\"obj\":_vm.port}}),_c('debugSection',{attrs:{\"label\":\"baudRate\",\"obj\":_vm.baudRate}}),_c('debugSection',{attrs:{\"label\":\"serial\",\"obj\":_vm.serial}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Debug.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Debug.vue?vue&type=script&lang=js&\"","<template>\n    <q-page class=\"fit column no-wrap justify-center items-center content-center\">\n        <h1>\n            {{ $t('information') }}\n            {{ $t('for') }}\n            {{ $t('developer') }}\n        </h1>\n        <debugSection label=\"platform\" :obj=\"this.$q.platform\"/>\n        <section>\n            <q-btn\n                round\n                :color=\"$q.dark.isActive ? 'blue' : 'black'\"\n                icon=\"mdi-lightbulb-on-outline\"\n                @click=\"$q.dark.toggle()\"\n            />\n            <br>\n             <q-btn\n                flat\n                round\n                @click=\"$q.dark.toggle()\"\n                :icon=\"$q.dark.isActive ? 'brightness_2' : 'brightness_5'\"\n            />\n        </section>\n        <section>\n            <q-btn\n                v-ripple\n                :label=\"$t('database_harvest_export_csv')\"\n                icon=\"mdi-database-export\"\n                @click=\"serverExportToCSV('harvest', 'current_day')\"\n            /><br>\n            <q-btn\n                v-ripple\n                :label=\"$t('database_config_import_all')\"\n                icon=\"mdi-database-import\"\n                @click=\"importAll()\"\n            /><br>\n            <q-btn\n                v-ripple\n                label=\"import crop from file\"\n                icon=\"mdi-database-import\"\n                @click=\"serverImport('crop')\"\n            /><br>\n            <q-btn\n                v-ripple\n                label=\"import cropFilter from file\"\n                icon=\"mdi-database-import\"\n                @click=\"serverImport('crop-filter')\"\n            /><br>\n            <q-btn\n                v-ripple\n                label=\"import crate from file\"\n                icon=\"mdi-database-import\"\n                @click=\"serverImport('crate')\"\n            /><br>\n            <q-btn\n                v-ripple\n                :label=\"$t('database_config_clean')\"\n                icon=\"mdi-database-remove\"\n                @click=\"removeAll()\"\n            /><br>\n\n            <br>\n\n            <q-btn\n                v-ripple\n                :label=\"$t('pull_updates')\"\n                icon=\"mdi-download\"\n                @click=\"gitPull()\"\n            /><br>\n            <q-btn\n                v-ripple\n                :label=\"$t('reboot_system')\"\n                icon=\"mdi-restart\"\n                @click=\"serverSystemAction('reboot')\"\n            /><br>\n            <q-btn\n                v-ripple\n                :label=\"$t('shutdown_system')\"\n                icon=\"mdi-power\"\n                @click=\"serverSystemAction('shutdown')\"\n            /><br>\n        </section>\n        <section>\n            <q-toggle\n                size=\"xl\"\n                v-model=\"keypadVisible\"\n                label=\"Experimental Keypad\"\n            /><br>\n            <q-toggle\n                size=\"xl\"\n                v-model=\"devMode\"\n                label=\"Dev Mode\"\n            />\n        </section>\n        <section>\n            <q-input\n                filled\n                label=\"button size (mm)\"\n                type=\"number\"\n                v-model.number=\"btnSize\"\n                debounce=\"500\"\n            />\n            <q-input\n                filled\n                label=\"button filter size (mm)\"\n                type=\"number\"\n                v-model.number=\"btnSizeFilter\"\n                debounce=\"500\"\n            />\n            <q-input\n                filled\n                label=\"button spaceing (mm)\"\n                type=\"number\"\n                v-model.number=\"btnSpace\"\n                debounce=\"500\"\n            />\n        </section>\n        <settingsSerial />\n        <!-- <debugSection label=\"globalConfig\" :obj=\"globalConfig\"/> -->\n        <!-- <debugSection label=\"serialDevice\" :obj=\"serialDevice\"/> -->\n        <!-- <debugSection label=\"btnSpace\" :obj=\"btnSpace\"/> -->\n        <debugSection label=\"testthing\" :obj=\"testthing\"/>\n    </q-page>\n</template>\n\n<script>\nimport {\n    // useFind,\n    // useGet,\n    makeFindMixin\n} from 'feathers-vuex'\nimport { mapBind } from '../store/mapBind.js'\nimport debugSection from 'components/debugSection'\nimport settingsSerial from 'components/settingsSerial'\nimport {\n    importAll,\n    removeAll,\n    serverExportToCSV,\n    serverImport,\n    removeDBFile,\n    removeDB,\n    serverSystemAction,\n    gitPull,\n    startScaleDemo\n} from '../management_func.js'\n\n// Detecting Locale\n// https://quasar.dev/options/quasar-language-packs#Detecting-Locale\n// https://quasar.dev/options/app-internationalization#Detecting-Locale\n// get browser lang:\n// this.$q.lang.getLocale()\n// get selected lang\n// this.$q.lang.isoName\n// or\n// this.$i18n.locale\n\nexport default {\n    data () {\n        return {\n            testthing: 'hello world'\n        }\n    },\n    computed: {\n        // ...mapBindIDItems('global-config', ['serialDevice', 'pos', 'btnSize', 'btnSpace']),\n        ...mapBind('localconfig', [\n            'btnSize',\n            'btnSizeFilter',\n            'btnSpace',\n            'keypadVisible',\n            'devMode'\n        ]),\n        globalConfigParams () {\n            return { query: {} }\n        },\n        crateParams () {\n            return {\n                query: {\n                    $sort: {\n                        _id: 1\n                    }\n                }\n            }\n        },\n        cropParams () {\n            return {\n                query: {\n                    $sort: {\n                        _id: 1\n                    }\n                }\n            }\n        },\n        cropFilterParams () {\n            return {\n                query: {\n                    $sort: {\n                        _id: 1\n                    }\n                }\n            }\n        }\n    },\n    methods: {\n        importAll: importAll,\n        removeAll: removeAll,\n        serverExportToCSV: serverExportToCSV,\n        serverImport: serverImport,\n        removeDBFile: removeDBFile,\n        removeDB: removeDB,\n        serverSystemAction: serverSystemAction,\n        gitPull: gitPull,\n        startScaleDemo: startScaleDemo\n    },\n    created: function () {\n        // return mapBindIDItems('global-config', ['serialDevice', 'pos', 'btnSize', 'btnSpace'])\n    },\n    mixins: [\n        makeFindMixin({ service: 'global-config' }),\n        makeFindMixin({ service: 'crate' }),\n        makeFindMixin({ service: 'crop' }),\n        makeFindMixin({ service: 'crop-filter' })\n    ],\n    components: {\n        debugSection,\n        settingsSerial\n    },\n    name: 'PageDebug'\n}\n</script>\n","import { render, staticRenderFns } from \"./Debug.vue?vue&type=template&id=33e4e625&\"\nimport script from \"./Debug.vue?vue&type=script&lang=js&\"\nexport * from \"./Debug.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QToggle from 'quasar/src/components/toggle/QToggle.js';\nimport QInput from 'quasar/src/components/input/QInput.js';import Ripple from 'quasar/src/directives/Ripple.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QPage,QBtn,QToggle,QInput});qInstall(component, 'directives', {Ripple});\n","// inspired by mapBind.js\n// https://vuex.feathersjs.com/feathers-vuex-forms.html#feathersvuexinputwrapper\n\n// ------------------------------------------\n// usage:\n// import { mapBindIDItems } from 'store/mapBindIDItems.js'\n//\n// export default {\n//     name: 'ComponentName',\n//     computed: {\n//         ...mapBindIDItems('global-config', ['serialDevice', 'someOtherThing'])\n//     },\n// }\n\nimport Vue from 'vue'\nimport {\n    // useFind,\n    useGet\n} from 'feathers-vuex'\nimport {\n// import feathersClient, {\n    models\n} from '../feathers-client'\n\nexport function capitalizeFirstLetter (string) {\n    // https://stackoverflow.com/questions/1026069/how-do-i-make-the-first-letter-of-a-string-uppercase-in-javascript\n    return string.charAt(0).toUpperCase() + string.slice(1)\n}\nexport function decapitalizeFirstLetter (string) {\n    return string.charAt(0).toLowerCase() + string.slice(1)\n}\n\nexport function servicePath2modelClassName (servicePath) {\n    let modelParts = servicePath.split('-')\n    modelParts = modelParts.map(item => { return capitalizeFirstLetter(item) })\n    // console.log('modelParts', modelParts)\n    const modelClassName = modelParts.join('')\n    return modelClassName\n}\n\nexport function servicePath2servicePathName (servicePath) {\n    const modelClassName = servicePath2modelClassName(servicePath)\n    const servicePathName = decapitalizeFirstLetter(modelClassName)\n    return servicePathName\n}\n\nexport const findList = async function (servicePath) {\n    const modelClassName = servicePath2modelClassName(servicePath)\n    const ModelClass = models.api[modelClassName]\n    const params = {\n        query: {},\n        paginate: false\n    }\n    const resultFind = await ModelClass.find(params)\n    const gcList = resultFind.data\n    return gcList\n}\n\nexport const mapBindIDItems = function (servicePath, entryNames) {\n    // helper function for vuex\n    // create setter and getter functions for given store and properties\n\n    // ------------------------------------------\n    // global\n    const resultServicePath = {}\n    const resultEntries = {}\n\n    // console.log('models.api', models.api)\n    // const ModelClass = this.$FeathersVuex.api[servicePath2modelClassName(servicePath)]\n    const modelClassName = servicePath2modelClassName(servicePath)\n    // console.log('modelClassName', modelClassName)\n    const ModelClass = models.api[modelClassName]\n    // console.log('ModelClass', ModelClass)\n    const servicePathName = decapitalizeFirstLetter(modelClassName)\n\n    // ------------------------------------------\n    // prepare empty base\n    const reactiveBase = {}\n    Vue.set(reactiveBase, 'gcList', {})\n    resultServicePath[servicePathName] = {\n        get: function () {\n            return reactiveBase.gcList\n        }\n    }\n\n    for (const entryName of entryNames) {\n        resultEntries[entryName] = {\n            get: function () {\n                return null\n            },\n            set: function (val) {\n            }\n        }\n    }\n\n    // ------------------------------------------\n    // servicePath setup\n    const params = {\n        query: {},\n        paginate: false\n    }\n    ModelClass.find(params).then((resultFind) => {\n        for (const item of resultFind.data) {\n            reactiveBase.gcList[item.id] = item\n        }\n    }).catch((error) => {\n        // console.error(error.message, error)\n        console.error(error.type, error.message)\n    })\n\n    // ------------------------------------------\n    // entryNames setup\n    for (const entryName of entryNames) {\n        // get from server and store\n        const resultUseGet = useGet({\n            model: ModelClass,\n            id: entryName,\n            _id: entryName\n        })\n        let gcItem = resultUseGet.item.value\n        // check if item exists\n        if (!gcItem) {\n            // create new item\n            const data = {\n                id: entryName,\n                _id: entryName,\n                value: null\n            }\n            gcItem = new ModelClass(data)\n            // gcItem.create().catch((error) => {\n            //     console.log('mapBindIDItems: create - ' + error.message, error)\n            // })\n            gcItem.create().catch((error) => {\n                console.error('mapBindIDItems: create - ', error.type, error.message)\n                // console.log('gcItem', gcItem)\n                // console.log('ModelClass', ModelClass)\n                // console.log('ModelClass.store.commit', ModelClass.store.commit)\n                // console.log(`ModelClass.store.commit '${ModelClass.store.commit}'`)\n                console.log('→ manually commit mutation *addItem*')\n                ModelClass.store.commit(servicePath + '/addItem', data)\n            })\n        }\n        const gcItemClone = gcItem.clone()\n        resultEntries[entryName].get = function () {\n            return gcItemClone.value\n        }\n        resultEntries[entryName].set = function (val) {\n            gcItemClone.value = val\n            gcItemClone.commit()\n            gcItem.patch({ data: { value: val } })\n        }\n    }\n    const result = Object.assign({}, resultServicePath, resultEntries)\n    return result\n}\n"],"sourceRoot":""}