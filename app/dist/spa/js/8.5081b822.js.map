{"version":3,"sources":["webpack:///./src/pages/Dev2Layout.vue?ce19","webpack:///./src/pages/Dev2Layout.vue?38bb","webpack:///src/pages/Dev2Layout.vue","webpack:///./src/pages/Dev2Layout.vue","webpack:///./src/components/BtnToggleGrid.vue?f82a","webpack:///./src/components/BtnToggleGrid.vue?c055","webpack:///src/components/BtnToggleGrid.vue","webpack:///./src/components/BtnToggleGrid.vue","webpack:///./src/store/mapBind.js"],"names":["component","_vm","this","_h","$createElement","_c","_self","attrs","label","value","model","callback","$$v","btnVertical","expression","cropFilter","btnSpace","cropFilterSelected","QPage","QBtnToggle","class","containerClassObject","_l","item","key","_id","activeClass","style","margin","space","on","$event","$emit","size","icon","width","height","imageBaseURL","image","_e","fontSize","_v","_s","text","QBtn","QIcon","QImg","mapBind","base","params","map","mapState","result","Object","entries","get","set","val","mutationName","string","charAt","toUpperCase","slice","$store","commit"],"mappings":"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","file":"js/8.5081b822.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',{},[_c('q-btn-toggle',{attrs:{\"no-caps\":\"\",\"rounded\":\"\",\"unelevated\":\"\",\"toggle-color\":\"primary\",\"color\":\"white\",\"text-color\":\"primary\",\"options\":[\n              {label: 'Vertical', value: true},\n              {label: 'Horicontal', value: false}\n            ]},model:{value:(_vm.btnVertical),callback:function ($$v) {_vm.btnVertical=$$v},expression:\"btnVertical\"}}),_c('btn-toggle-grid',{attrs:{\"vertical\":_vm.btnVertical,\"options\":_vm.cropFilter,\"active-class\":\"bg-orange\",\"push\":\"\",\"rounded\":\"\",\"stack\":\"\",\"size\":'30mm',\"space\":_vm.btnSpace + 'mm'},model:{value:(_vm.cropFilterSelected),callback:function ($$v) {_vm.cropFilterSelected=$$v},expression:\"cropFilterSelected\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dev2Layout.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dev2Layout.vue?vue&type=script&lang=js&\"","<template>\n    <q-page class=\"\">\n        <q-btn-toggle\n            v-model=\"btnVertical\"\n            no-caps\n            rounded\n            unelevated\n            toggle-color=\"primary\"\n            color=\"white\"\n            text-color=\"primary\"\n            :options=\"[\n              {label: 'Vertical', value: true},\n              {label: 'Horicontal', value: false}\n            ]\"\n        />\n        <btn-toggle-grid\n            :vertical=\"btnVertical\"\n            v-model=\"cropFilterSelected\"\n            :options=\"cropFilter\"\n            active-class=\"bg-orange\"\n            push\n            rounded\n            stack\n            :size=\"'30mm'\"\n            :space=\"btnSpace + 'mm'\"\n        />\n</q-page>\n</template>\n\n<script>\n// import {\n//     // mapState,\n//     // mapGetters,\n//     // mapActions\n// } from 'vuex'\nimport {\n    // useFind,\n    // useGet,\n    makeFindMixin\n} from 'feathers-vuex'\nimport { mapBind } from '../store/mapBind.js'\n// import DebugSection from 'components/debugSection'\nimport BtnToggleGrid from 'components/BtnToggleGrid.vue'\n\nexport default {\n    name: 'PageDev2_Layout',\n    data () {\n        return {\n            btnVertical: false\n        }\n    },\n    computed: {\n        ...mapBind('localconfig', [\n            'btnSize',\n            'btnSpace',\n            'cropSelected',\n            'cropFilterSelected'\n        ]),\n        cropParams () {\n            return { query: this.cropFilterSelected.queryFixed }\n        },\n        cropFilterParams () {\n            return {\n                query: {\n                    $sort: {\n                        _id: 1\n                    }\n                }\n            }\n        }\n    },\n    mixins: [\n        makeFindMixin({ service: 'crop' }),\n        makeFindMixin({ service: 'crop-filter' })\n    ],\n    components: {\n        // DebugSection,\n        BtnToggleGrid\n    }\n}\n\n</script>\n","import { render, staticRenderFns } from \"./Dev2Layout.vue?vue&type=template&id=6b1db8f7&\"\nimport script from \"./Dev2Layout.vue?vue&type=script&lang=js&\"\nexport * from \"./Dev2Layout.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport QBtnToggle from 'quasar/src/components/btn-toggle/QBtnToggle.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QPage,QBtnToggle});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.containerClassObject},_vm._l((_vm.options),function(item){return _c('q-btn',{key:item._id,class:item._id === _vm.value._id ? _vm.activeClass : '',style:({ margin: _vm.space}),attrs:{\"stack\":\"\",\"title\":item._id},on:{\"click\":function($event){_vm.$emit('input', item); _vm.$emit('click', $event)}}},[(item.icon)?_c('q-icon',{attrs:{\"size\":_vm.size,\"name\":item.icon}}):(item.image)?_c('q-img',{style:({width: _vm.size, height: _vm.size}),attrs:{\"src\":_vm.imageBaseURL + item.image,\"contain\":\"\"}}):_vm._e(),_c('div',{style:({ 'font-size': _vm.fontSize, 'line-height':'100%' })},[_vm._v(\"\\n            \"+_vm._s(item.text)+\"\\n        \")])],1)}),1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BtnToggleGrid.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BtnToggleGrid.vue?vue&type=script&lang=js&\"","<template>\n    <div :class=\"containerClassObject\">\n        <!-- style=\"\n            display: flex;\n            flex-direction: column;\n            flex-wrap: nowrap;\n            justify-content: flex-start;\n            align-content: stretch;\n            align-items: center;\n            \" -->\n        <!-- <div class=\"shadow-10\">\n            _id {{ _id }} <br>\n            options {{ options }} <br>\n            activeClass {{ activeClass }} <br>\n        </div> -->\n        <q-btn\n            v-for=\"item in options\"\n            :key=\"item._id\"\n            @click=\"$emit('input', item); $emit('click', $event)\"\n            :class=\"item._id === value._id ? activeClass : ''\"\n            stack\n            :title=\"item._id\"\n            :style=\"{ margin: space}\"\n        >\n            <q-icon\n                v-if=\"item.icon\"\n                :size=\"size\"\n                :name=\"item.icon\"\n            />\n            <q-img\n                v-else-if=\"item.image\"\n                :src=\"imageBaseURL + item.image\"\n                :style=\"{width: size, height: size}\"\n                contain\n            />\n            <div\n                :style=\"{ 'font-size': fontSize, 'line-height':'100%' }\"\n            >\n                {{ item.text }}\n            </div>\n        </q-btn>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'BtnToggleGrid',\n    data () {\n        return {\n        }\n    },\n    methods: {\n        //\n    },\n    computed: {\n        containerClassObject: function () {\n            return [\n                { column: this.vertical },\n                { row: !this.vertical },\n                'wrap',\n                // 'justify-around',\n                'content-start',\n                'items-center'\n            ]\n        }\n    },\n    props: {\n        value: {\n            type: Object,\n            required: false,\n            default: () => { return undefined }\n        },\n        options: {\n            type: Array,\n            required: false,\n            default: () => { return [] }\n        },\n        // key: {\n        //     this does not work :-(\n        //     as iam not aible to use this in the template..\n        //     type: String,\n        //     required: '_id'\n        // },\n        imageBaseURL: {\n            type: String,\n            required: false,\n            default: 'http://localhost:3030/api/'\n        },\n        size: {\n            type: String,\n            required: false,\n            default: '30mm'\n        },\n        space: {\n            type: String,\n            required: false,\n            default: '5mm'\n        },\n        fontSize: {\n            type: String,\n            required: false,\n            default: '1em'\n        },\n        activeClass: {\n            type: String,\n            required: false,\n            default: 'text-orange'\n        },\n        vertical: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n        // showImage: {\n        //     type: Boolean,\n        //     required: false,\n        //     default: true\n        // }\n    }\n}\n</script>\n","import { render, staticRenderFns } from \"./BtnToggleGrid.vue?vue&type=template&id=3fd99906&\"\nimport script from \"./BtnToggleGrid.vue?vue&type=script&lang=js&\"\nexport * from \"./BtnToggleGrid.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QBtn,QIcon,QImg});\n","// ------------------------------------------\n// usage:\n// import { mapBind } from 'store/mapBind.js'\n//\n// export default {\n//     name: 'ComponentName',\n//     computed: {\n//         ...mapBind('appconfig', ['globalMessage', 'someOtherThing'])\n//     },\n// }\n\n// inspired by https://stackoverflow.com/a/48447361/574981\n\nimport { mapState } from 'vuex'\n\n// export const mapBind = (base, params = {}) => (\n// export const mapBind = (base, params) => (\nexport const mapBind = function (base, params) {\n    // helper function for vuex\n    // create setter and getter functions for given store and properties\n    function capitalizeFirstLetter (string) {\n        // https://stackoverflow.com/questions/1026069/how-do-i-make-the-first-letter-of-a-string-uppercase-in-javascript\n        return string.charAt(0).toUpperCase() + string.slice(1)\n    }\n\n    const map = mapState(base, params)\n    const result = {}\n    // console.log(map)\n    for (const [key, value] of Object.entries(map)) {\n        // console.log('key', key)\n        // console.log('value', value)\n        result[key] = {\n            get: value\n        }\n        result[key].set = function (val) {\n            // this.$store.commit('appconfig/setGlobalMessage', val)\n            const mutationName = 'set' + capitalizeFirstLetter(key)\n            this.$store.commit(base + '/' + mutationName, val)\n        }\n    }\n    // console.log(result)\n    return result\n// )\n}\n"],"sourceRoot":""}