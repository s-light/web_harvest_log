{"version":3,"sources":["webpack:///./src/pages/SelectPlace.vue?0ccf","webpack:///./src/pages/SelectPlace.vue?29b6","webpack:///src/pages/SelectPlace.vue","webpack:///./src/pages/SelectPlace.vue","webpack:///./src/components/BtnToggleGrid.vue?1c8a","webpack:///./src/components/BtnToggleGrid.vue?c055","webpack:///src/components/BtnToggleGrid.vue","webpack:///./src/components/BtnToggleGrid.vue","webpack:///./src/store/mapBind.js"],"names":["component","_vm","this","_h","$createElement","_c","_self","attrs","place","btnSizeUnit","btnSpaceUnit","on","next","model","value","callback","$$v","placeSelected","expression","QPage","class","containerClassObject","_l","item","key","_id","activeClass","style","margin","space","$event","$emit","size","icon","width","height","imageBaseURL","image","_e","fontSize","_v","_s","text","QBtn","QIcon","QImg","mapBind","base","params","map","mapState","result","Object","entries","get","set","val","mutationName","string","charAt","toUpperCase","slice","$store","commit"],"mappings":"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","file":"js/10.eb7ca850.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',{},[_c('btn-toggle-grid',{attrs:{\"options\":_vm.place,\"active-class\":\"bg-orange\",\"push\":\"\",\"rounded\":\"\",\"stack\":\"\",\"size\":_vm.btnSizeUnit,\"fontSize\":\"5em\",\"space\":_vm.btnSpaceUnit},on:{\"click\":_vm.next},model:{value:(_vm.placeSelected),callback:function ($$v) {_vm.placeSelected=$$v},expression:\"placeSelected\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectPlace.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectPlace.vue?vue&type=script&lang=js&\"","<template>\n    <q-page class=\"\">\n        <!-- <debugSection label=\"cropSelected\" :obj=\"cropSelected\"/> -->\n        <!-- <debugSection label=\"placeSelected\" :obj=\"placeSelected\"/> -->\n        <!-- <debugSection label=\"place\" :obj=\"place\"/> -->\n        <btn-toggle-grid\n            v-model=\"placeSelected\"\n            :options=\"place\"\n            active-class=\"bg-orange\"\n            push\n            rounded\n            stack\n            :size=\"btnSizeUnit\"\n            fontSize=\"5em\"\n            :space=\"btnSpaceUnit\"\n            @click=\"next\"\n        />\n</q-page>\n</template>\n\n<script>\n// import { makeFindMixin } from 'feathers-vuex'\nimport { mapBind } from '../store/mapBind.js'\n// import DebugSection from 'components/debugSection'\nimport BtnToggleGrid from 'components/BtnToggleGrid.vue'\n\nexport default {\n    name: 'PageSelectPlace',\n    data () {\n        return {\n        }\n    },\n    methods: {\n        next: function () {\n            this.$router.push('save_harvest')\n        }\n    },\n    filters: {\n    },\n    computed: {\n        ...mapBind('localconfig', [\n            'btnSize',\n            'btnSpace',\n            'cropSelected',\n            'placeSelected'\n        ]),\n        btnSizeUnit () {\n            return this.btnSize + 'mm'\n        },\n        btnSpaceUnit () {\n            return this.btnSpace + 'mm'\n        },\n        place () {\n            let result = []\n            const crop = this.cropSelected\n            console.log('crop', crop)\n            if (crop && crop.places) {\n                console.log('crop.places', crop.places)\n                result = crop.placesList()\n            }\n            return result\n        }\n    },\n    components: {\n        // DebugSection,\n        BtnToggleGrid\n    }\n}\n\n</script>\n","import { render, staticRenderFns } from \"./SelectPlace.vue?vue&type=template&id=102a4d63&\"\nimport script from \"./SelectPlace.vue?vue&type=script&lang=js&\"\nexport * from \"./SelectPlace.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QPage});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.containerClassObject},_vm._l((_vm.options),function(item){return _c('q-btn',{key:item._id,class:item._id === _vm.value._id ? _vm.activeClass : '',style:({ margin: _vm.space}),attrs:{\"stack\":\"\",\"title\":item._id},on:{\"click\":function($event){_vm.$emit('input', item); _vm.$emit('click', $event)}}},[(item.icon)?_c('q-icon',{attrs:{\"size\":_vm.size,\"name\":item.icon}}):(item.image)?_c('q-img',{style:({width: _vm.size, height: _vm.size}),attrs:{\"src\":_vm.imageBaseURL + item.image,\"contain\":\"\"}}):_vm._e(),_c('div',{style:({ 'font-size': _vm.fontSize })},[_vm._v(\"\\n            \"+_vm._s(item.text)+\"\\n        \")])],1)}),1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BtnToggleGrid.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BtnToggleGrid.vue?vue&type=script&lang=js&\"","<template>\n    <div :class=\"containerClassObject\">\n        <!-- style=\"\n            display: flex;\n            flex-direction: column;\n            flex-wrap: nowrap;\n            justify-content: flex-start;\n            align-content: stretch;\n            align-items: center;\n            \" -->\n        <!-- <div class=\"shadow-10\">\n            _id {{ _id }} <br>\n            options {{ options }} <br>\n            activeClass {{ activeClass }} <br>\n        </div> -->\n        <q-btn\n            v-for=\"item in options\"\n            :key=\"item._id\"\n            @click=\"$emit('input', item); $emit('click', $event)\"\n            :class=\"item._id === value._id ? activeClass : ''\"\n            stack\n            :title=\"item._id\"\n            :style=\"{ margin: space}\"\n        >\n            <q-icon\n                v-if=\"item.icon\"\n                :size=\"size\"\n                :name=\"item.icon\"\n            />\n            <q-img\n                v-else-if=\"item.image\"\n                :src=\"imageBaseURL + item.image\"\n                :style=\"{width: size, height: size}\"\n                contain\n            />\n            <div\n                :style=\"{ 'font-size': fontSize }\"\n            >\n                {{ item.text }}\n            </div>\n        </q-btn>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'BtnToggleGrid',\n    data () {\n        return {\n        }\n    },\n    methods: {\n        //\n    },\n    computed: {\n        containerClassObject: function () {\n            return [\n                { column: this.vertical },\n                { row: !this.vertical },\n                'wrap',\n                'justify-around',\n                'content-start',\n                'items-center'\n            ]\n        }\n    },\n    props: {\n        value: {\n            type: Object,\n            required: false\n        },\n        options: {\n            type: Array,\n            required: true\n        },\n        // key: {\n        //     this does not work :-(\n        //     as iam not aible to use this in the template..\n        //     type: String,\n        //     required: '_id'\n        // },\n        imageBaseURL: {\n            type: String,\n            required: false,\n            default: 'http://localhost:3030/api/'\n        },\n        size: {\n            type: String,\n            required: false,\n            default: '30mm'\n        },\n        space: {\n            type: String,\n            required: false,\n            default: '5mm'\n        },\n        fontSize: {\n            type: String,\n            required: false,\n            default: '1em'\n        },\n        activeClass: {\n            type: String,\n            required: false,\n            default: 'text-orange'\n        },\n        vertical: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    }\n}\n</script>\n","import { render, staticRenderFns } from \"./BtnToggleGrid.vue?vue&type=template&id=56b3f014&\"\nimport script from \"./BtnToggleGrid.vue?vue&type=script&lang=js&\"\nexport * from \"./BtnToggleGrid.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QBtn,QIcon,QImg});\n","// ------------------------------------------\n// usage:\n// import { mapBind } from 'store/mapBind.js'\n//\n// export default {\n//     name: 'ComponentName',\n//     computed: {\n//         ...mapBind('appconfig', ['globalMessage', 'someOtherThing'])\n//     },\n// }\n\n// inspired by https://stackoverflow.com/a/48447361/574981\n\nimport { mapState } from 'vuex'\n\n// export const mapBind = (base, params = {}) => (\n// export const mapBind = (base, params) => (\nexport const mapBind = function (base, params) {\n    // helper function for vuex\n    // create setter and getter functions for given store and properties\n    function capitalizeFirstLetter (string) {\n        // https://stackoverflow.com/questions/1026069/how-do-i-make-the-first-letter-of-a-string-uppercase-in-javascript\n        return string.charAt(0).toUpperCase() + string.slice(1)\n    }\n\n    const map = mapState(base, params)\n    const result = {}\n    // console.log(map)\n    for (const [key, value] of Object.entries(map)) {\n        // console.log('key', key)\n        // console.log('value', value)\n        result[key] = {\n            get: value\n        }\n        result[key].set = function (val) {\n            // this.$store.commit('appconfig/setGlobalMessage', val)\n            const mutationName = 'set' + capitalizeFirstLetter(key)\n            this.$store.commit(base + '/' + mutationName, val)\n        }\n    }\n    // console.log(result)\n    return result\n// )\n}\n"],"sourceRoot":""}