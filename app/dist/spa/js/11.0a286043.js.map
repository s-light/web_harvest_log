{"version":3,"sources":["webpack:///./src/components/BtnToggleGrid.vue?3b18","webpack:///src/components/BtnToggleGrid.vue","webpack:///./src/components/BtnToggleGrid.vue?c055","webpack:///./src/components/BtnToggleGrid.vue","webpack:///./src/pages/SelectCrop.vue?8062","webpack:///src/pages/SelectCrop.vue","webpack:///./src/pages/SelectCrop.vue?7e7d","webpack:///./src/pages/SelectCrop.vue","webpack:///./src/store/mapBind.js"],"names":["mapBind","base","params","capitalizeFirstLetter","string","charAt","toUpperCase","slice","map","mapState","result","key","value","Object","entries","get","set","val","mutationName","$store","commit"],"mappings":"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","file":"js/11.0a286043.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.containerClassObject},_vm._l((_vm.options),function(item){return _c('q-btn',{key:item._id,class:item._id === _vm.value._id ? _vm.activeClass : '',style:({ margin: _vm.space}),attrs:{\"stack\":\"\",\"title\":item._id},on:{\"click\":function($event){_vm.$emit('input', item); _vm.$emit('click', $event)}}},[(item.icon)?_c('q-icon',{attrs:{\"size\":_vm.size,\"name\":item.icon}}):(item.image)?_c('q-img',{style:({width: _vm.size, height: _vm.size}),attrs:{\"src\":_vm.imageBaseURL + item.image,\"contain\":\"\"}}):_vm._e(),_c('div',{style:({ 'font-size': _vm.fontSize, 'line-height':'100%' })},[_vm._v(\"\\n            \"+_vm._s(item.text)+\"\\n        \")])],1)}),1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div :class=\"containerClassObject\">\n        <!-- style=\"\n            display: flex;\n            flex-direction: column;\n            flex-wrap: nowrap;\n            justify-content: flex-start;\n            align-content: stretch;\n            align-items: center;\n            \" -->\n        <!-- <div class=\"shadow-10\">\n            _id {{ _id }} <br>\n            options {{ options }} <br>\n            activeClass {{ activeClass }} <br>\n        </div> -->\n        <!--\n            :title=\"$t(item._id)\"\n        -->\n        <q-btn\n            v-for=\"item in options\"\n            :key=\"item._id\"\n            @click=\"$emit('input', item); $emit('click', $event)\"\n            :class=\"item._id === value._id ? activeClass : ''\"\n            stack\n            :title=\"item._id\"\n            :style=\"{ margin: space}\"\n        >\n            <q-icon\n                v-if=\"item.icon\"\n                :size=\"size\"\n                :name=\"item.icon\"\n            />\n            <q-img\n                v-else-if=\"item.image\"\n                :src=\"imageBaseURL + item.image\"\n                :style=\"{width: size, height: size}\"\n                contain\n            />\n            <div\n                :style=\"{ 'font-size': fontSize, 'line-height':'100%' }\"\n            >\n                <!-- {{ $t(item.text) }} -->\n                {{ item.text }}\n            </div>\n        </q-btn>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'BtnToggleGrid',\n    data () {\n        return {\n        }\n    },\n    methods: {\n        //\n    },\n    computed: {\n        containerClassObject: function () {\n            return [\n                { column: this.vertical },\n                { row: !this.vertical },\n                'wrap',\n                // 'justify-around',\n                'content-start',\n                'items-center'\n            ]\n        }\n    },\n    props: {\n        value: {\n            type: Object,\n            required: false,\n            default: () => { return undefined }\n        },\n        options: {\n            type: Array,\n            required: false,\n            default: () => { return [] }\n        },\n        // key: {\n        //     this does not work :-(\n        //     as iam not aible to use this in the template..\n        //     type: String,\n        //     required: '_id'\n        // },\n        imageBaseURL: {\n            type: String,\n            required: false,\n            default: 'http://localhost:3030/api/'\n        },\n        size: {\n            type: String,\n            required: false,\n            default: '30mm'\n        },\n        space: {\n            type: String,\n            required: false,\n            default: '5mm'\n        },\n        fontSize: {\n            type: String,\n            required: false,\n            default: '1em'\n        },\n        activeClass: {\n            type: String,\n            required: false,\n            default: 'text-orange'\n        },\n        vertical: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n        // showImage: {\n        //     type: Boolean,\n        //     required: false,\n        //     default: true\n        // }\n    }\n}\n</script>\n","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BtnToggleGrid.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BtnToggleGrid.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BtnToggleGrid.vue?vue&type=template&id=616110ac&\"\nimport script from \"./BtnToggleGrid.vue?vue&type=script&lang=js&\"\nexport * from \"./BtnToggleGrid.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QBtn,QIcon,QImg});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',{staticClass:\"fit\"},[_c('section',{staticClass:\"row no-wrap\",style:({\n                maxHeight:'100vh',\n            })},[_c('btn-toggle-grid',{staticClass:\"justify-start no-wrap col-auto\",style:({\n                    flex:'column',\n                    overflowY:'auto',\n                    height:'100vh',\n                    boxShadow:\"\\n                        0 0 5px -6px hsla(0, 0%, 0%, 1.0),\\n                        0 0 10px 2px hsla(0, 0%, 0%, 0.5),\\n                        0 0 15px 6px hsla(0, 0%, 0%, 0.5)\\n                    \",\n                    'background-color':'hsla(0, 0%, 100%, 0.1)',\n                }),attrs:{\"vertical\":\"\",\"options\":_vm.cropFilter,\"active-class\":\"bg-orange\",\"push\":\"\",\"rounded\":\"\",\"stack\":\"\",\"size\":_vm.btnSize/1.0 + 'mm',\"fontSize\":\"1.2em\",\"space\":0 + 'mm'},model:{value:(_vm.cropFilterSelected),callback:function ($$v) {_vm.cropFilterSelected=$$v},expression:\"cropFilterSelected\"}}),_c('btn-toggle-grid',{staticClass:\"col-grow justify-around\",style:({\n                    flex:'column',\n                    flexShrink:1,\n                    overflowY:'auto',\n                    maxHeight:'100vh',\n                }),attrs:{\"options\":_vm.crop,\"active-class\":\"bg-orange\",\"push\":\"\",\"rounded\":\"\",\"stack\":\"\",\"size\":_vm.btnSize + 'mm',\"fontSize\":\"1.5em\",\"space\":_vm.btnSpace + 'mm'},on:{\"click\":_vm.handleCropSelect},model:{value:(_vm.cropSelected),callback:function ($$v) {_vm.cropSelected=$$v},expression:\"cropSelected\"}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <q-page class=\"fit\">\n        <!-- <debugSection label=\"crop\" :obj=\"crop\"/> -->\n        <!-- <debugSection label=\"btnSizeUnit\" :obj=\"btnSizeUnit\"/> -->\n        <section\n            class=\"row no-wrap\"\n            :style=\"{\n                maxHeight:'100vh',\n            }\"\n        >\n            <!-- <section>\n                <debugSection label=\"cropFilterSelected\" :obj=\"cropFilterSelected\"/>\n                <debugSection label=\"cropParams\" :obj=\"cropParams\"/>\n                <debugSection label=\"xXcropParams\" :obj=\"xXcropParams\"/>\n                <debugSection label=\"crop\" :obj=\"crop\" style=\"font-size:0.5em\"/>\n            </section> -->\n            <btn-toggle-grid\n                :style=\"{\n                    flex:'column',\n                    overflowY:'auto',\n                    height:'100vh',\n                    boxShadow:`\n                        0 0 5px -6px hsla(0, 0%, 0%, 1.0),\n                        0 0 10px 2px hsla(0, 0%, 0%, 0.5),\n                        0 0 15px 6px hsla(0, 0%, 0%, 0.5)\n                    `,\n                    'background-color':'hsla(0, 0%, 100%, 0.1)',\n                }\"\n                class=\"justify-start no-wrap col-auto\"\n                vertical\n                v-model=\"cropFilterSelected\"\n                :options=\"cropFilter\"\n                active-class=\"bg-orange\"\n                push\n                rounded\n                stack\n                :size=\"btnSize/1.0 + 'mm'\"\n                fontSize=\"1.2em\"\n                :space=\"0 + 'mm'\"\n            />\n            <btn-toggle-grid\n                class=\"col-grow justify-around\"\n                :style=\"{\n                    flex:'column',\n                    flexShrink:1,\n                    overflowY:'auto',\n                    maxHeight:'100vh',\n                }\"\n                v-model=\"cropSelected\"\n                :options=\"crop\"\n                active-class=\"bg-orange\"\n                push\n                rounded\n                stack\n                :size=\"btnSize + 'mm'\"\n                fontSize=\"1.5em\"\n                :space=\"btnSpace + 'mm'\"\n                @click=\"handleCropSelect\"\n            />\n        </section>\n</q-page>\n</template>\n\n<script>\n// import {\n//     // mapState,\n//     // mapGetters,\n//     // mapActions\n// } from 'vuex'\nimport {\n    // useFind,\n    // useGet,\n    makeFindMixin\n} from 'feathers-vuex'\nimport { mapBind } from '../store/mapBind.js'\n// import DebugSection from 'components/debugSection'\nimport BtnToggleGrid from 'components/BtnToggleGrid.vue'\n\nexport default {\n    name: 'PageSelectCrop',\n    data () {\n        return {\n            test: 'car'\n        }\n    },\n    methods: {\n        handleCropSelect: function () {\n            if (this.cropSelected) {\n                // update lastUsed timestamp\n                // const data = {\n                //     lastUsed: new Date()\n                // }\n                // this.cropSelected.patch(data)\n                this.cropSelected.patch()\n                // give a short delay so the selection of the button is visible\n                setTimeout(() => {\n                    // handle routing\n                    if (this.cropSelected.placesCount() > 1) {\n                        // console.log('select_place')\n                        this.placeSelected = {}\n                        this.$router.push('select_place')\n                    } else {\n                        const crop = this.cropSelected\n                        console.log('crop', crop)\n                        console.log('crop.placesList', crop.placesList())\n                        console.log('crop.placesList[0]', crop.placesList()[0])\n                        if (crop.placesList()[0]) {\n                            this.placeSelected = crop.placesList()[0]\n                        } else {\n                            this.placeSelected = {}\n                        }\n                        this.$router.push('save_harvest')\n                    }\n                }, 200)\n            }\n        }\n    },\n    computed: {\n        ...mapBind('localconfig', [\n            'btnSize',\n            'btnSpace',\n            'cropSelected',\n            'cropFilterSelected',\n            'placeSelected'\n        ]),\n        cropParams () {\n            // default query = list all\n            const result = {\n                query: {\n                    $sort: {\n                        _id: 1\n                    }\n                }\n            }\n            const filter = this.cropFilterSelected\n            if (filter && filter.getQueryFixed) {\n                result.query = filter.getQueryFixed()\n            }\n            return result\n        },\n        cropFilterParams () {\n            return {\n                query: {\n                    $sort: {\n                        _id: 1\n                    }\n                }\n            }\n        }\n    },\n    watch: {\n        cropFilter: function (newCropfilter, oldCropfilter) {\n            console.log('this.cropFilterSelected', this.cropFilterSelected)\n            console.log('this.cropFilter', this.cropFilter)\n            console.log('newCropfilter', newCropfilter)\n            if (\n                this.cropFilter &&\n                this.cropFilter.length > 0 &&\n                this.cropFilterSelected &&\n                !('_id' in this.cropFilterSelected)\n            ) {\n                this.cropFilterSelected = this.cropFilter[0]\n            }\n        }\n    },\n    mixins: [\n        makeFindMixin({ service: 'crop' }),\n        makeFindMixin({ service: 'crop-filter' })\n    ],\n    components: {\n        // DebugSection,\n        BtnToggleGrid\n    }\n}\n\n</script>\n","import mod from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectCrop.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectCrop.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SelectCrop.vue?vue&type=template&id=742167a9&\"\nimport script from \"./SelectCrop.vue?vue&type=script&lang=js&\"\nexport * from \"./SelectCrop.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport qInstall from \"../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QPage});\n","// ------------------------------------------\n// usage:\n// import { mapBind } from 'store/mapBind.js'\n//\n// export default {\n//     name: 'ComponentName',\n//     computed: {\n//         ...mapBind('appconfig', ['globalMessage', 'someOtherThing'])\n//     },\n// }\n\n// inspired by https://stackoverflow.com/a/48447361/574981\n\nimport { mapState } from 'vuex'\n\n// export const mapBind = (base, params = {}) => (\n// export const mapBind = (base, params) => (\nexport const mapBind = function (base, params) {\n    // helper function for vuex\n    // create setter and getter functions for given store and properties\n    function capitalizeFirstLetter (string) {\n        // https://stackoverflow.com/questions/1026069/how-do-i-make-the-first-letter-of-a-string-uppercase-in-javascript\n        return string.charAt(0).toUpperCase() + string.slice(1)\n    }\n\n    const map = mapState(base, params)\n    const result = {}\n    // console.log(map)\n    for (const [key, value] of Object.entries(map)) {\n        // console.log('key', key)\n        // console.log('value', value)\n        result[key] = {\n            get: value\n        }\n        result[key].set = function (val) {\n            // this.$store.commit('appconfig/setGlobalMessage', val)\n            const mutationName = 'set' + capitalizeFirstLetter(key)\n            this.$store.commit(base + '/' + mutationName, val)\n        }\n    }\n    // console.log(result)\n    return result\n// )\n}\n"],"sourceRoot":""}