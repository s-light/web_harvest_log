{"version":3,"sources":["webpack:///./src/components/src/components/keypad.vue","webpack:///./src/components/keypad.vue","webpack:///./src/pages/src/pages/SaveHarvest.vue"],"names":[],"mappings":"AAkBA;EACI,qCAAkB;EAClB,cAAW;EACX,eAAY;ACjBhB;AACA,oDAAoD,C;;AC6PpD;IACA;AACA;AACA","file":"css/3.fc8d1444.css","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.keypad\n    background-color: hsla(100, 90%, 45%, 0.8)\n    min-width: 2em\n    min-height: 2em\n",".keypad {\n  background-color: rgba(80,218,11,0.8);\n  min-width: 2em;\n  min-height: 2em;\n}\n/*# sourceMappingURL=src/components/keypad.css.map */","<template>\n    <q-page class=\"fit\">\n        <section class=\"row no-wrap justify-evenly items-stretch content-stretch\">\n            <section class=\"column no-wrap justify-evenly items-stretch content-stretch\">\n                <div class=\"q-mt-md\">\n                    <!-- <div id=\"weight_display\" class=\"\">\n                        total weight: {{ totalWeight | formatWeight(lang) }} {{ scaleUnit }}\n                    </div> -->\n                    <!--\n                        '{{ lang }}'\n                        hint=\"Mask: #.##\"\n                        input-style=\"height: 50px;\"\n                    -->\n                    <q-input\n                        v-model=\"currentWeight\"\n                        debounce=\"500\"\n                        @keyup.enter=\"save()\"\n                        class=\"weight_display\"\n                        input-class=\"text-right\"\n                        filled\n                        hide-bottom-space\n                        item-aligned\n                        label-slot\n                    >\n                        <template v-slot:label>\n                            <div\n                                class=\"row justify-between items-start content-start\"\n                                style=\"font-size:2em; line-height:2em\"\n                            >\n                                <div style=\"\">\n                                    {{ $t('weight') }}\n                                </div>\n                                <div style=\"font-size: 0.8em\">\n                                    {{ totalWeight | formatWeight(lang) }} {{ scaleUnit }} {{ $t('scale') }} -\n                                    Tare: {{ crateSelected.tareWeight | formatWeight(lang) }} {{ scaleUnit }}\n                                </div>\n                            </div>\n                        </template>\n                        <template\n                            #append\n                            style=\"font-size:1em;\"\n                        >\n                            {{ scaleUnit }}\n                        </template>\n                    </q-input>\n                </div>\n\n                <section\n                    class=\"col-grow row no-wrap justify-evenly items-stretch content-stretch\"\n                >\n                    <!--\n                        :disable=\"!scaleStable\"\n                        style=\"width:90mm; height:90mm; flex: 0 1 auto; margin-right: 0.2em;\"\n                    -->\n                    <q-btn\n                        :label=\"$t('save')\"\n                        @click=\"save()\"\n                        icon=\"mdi-database-plus\"\n                        :ripple=\"{ early: true, color: 'orange'}\"\n                        stack\n                        class=\"col\"\n                        style=\"min-width:50mm; min-height:50mm; margin: 0.2em;\"\n                        size=\"20mm\"\n                    />\n                    <keypad\n                        class=\"col\"\n                        style=\"min-width:50mm; min-height:50mm; margin: 0.2em;\"\n                    />\n                </section>\n            </section>\n            <!--\n            -->\n            <section\n                class=\"row justify-between items-stretch content-stretch\"\n                style=\"min-width: 28em; overflowY: scroll; max-height: 100vh;\"\n            >\n                <!-- <div style=\"flex: 1 1 auto; padding:1em;\"> -->\n                    <q-list>\n                        <q-item\n                            v-for=\"item in harvest\"\n                            :key=\"item._id\"\n                        >\n                            <q-item-section avatar>\n                                <q-avatar rounded>\n                                    <img :src=\"imageBaseURL + item.crop.image\">\n                                </q-avatar>\n                            </q-item-section>\n                            <q-item-section>\n                                {{ item.crop.text }} <br>\n                                {{ item.place.text }} |\n                                {{item.weight}} {{item.scaleUnit}}\n                                <!-- {{ item.createdAt | formatdate() }} -->\n                                {{ item.createdAt | toLocal(lang) }}\n                            </q-item-section>\n                        </q-item>\n                    </q-list>\n                    <!-- <debugSection label=\"harvest\" :obj=\"harvest\"/> -->\n                <!-- </div> -->\n                <!-- :style=\"btnStyle\" -->\n                <!-- size=\"30mm\" -->\n                <!-- icons:\n                send\n                mdi-content-save\n                mdi-content-save-move\n                mdi-database-check\n                mdi-database-plus\n                mdi-database-arrow-down\n                mdi-check-bold\n                -->\n            </section>\n        </section>\n        <!-- <section style=\"font-size:0.8em;\">\n            <debugSection label=\"crateSelected\" :obj=\"crateSelected\"/>\n            <debugSection label=\"cropSelected\" :obj=\"cropSelected\"/>\n            <debugSection label=\"placeSelected\" :obj=\"placeSelected\"/>\n        </section> -->\n    </q-page>\n</template>\n\n<script>\nimport { makeFindMixin } from 'feathers-vuex'\nimport { mapBind } from '../store/mapBind.js'\n// import DebugSection from 'components/debugSection'\nimport keypad from 'components/keypad.vue'\n\nexport default {\n    name: 'PageSaveHarvest',\n    data () {\n        return {\n            imageBaseURL: 'http://localhost:3030/api/'\n        }\n    },\n    methods: {\n        save: function () {\n            console.group('save harvest log entry')\n            // console.log('crateSelected', this.crateSelected)\n            // console.log('cropSelected', this.cropSelected)\n            // console.log('placeSelected', this.placeSelected)\n            // console.log('totalWeight', this.totalWeight)\n            // console.log('currentWeight', this.currentWeight)\n            // console.log('scaleStable', this.scaleStable)\n            // console.log('scaleUnit', this.scaleUnit)\n            console.log('this.crateSelected._id', this.crateSelected._id)\n            console.log('this.cropSelected._id', this.cropSelected._id)\n            console.log('this.placeSelected._id', this.placeSelected._id)\n            // check if all requirements are fine\n            if (\n                this.crateSelected._id &&\n                this.cropSelected._id &&\n                !isNaN(this.placeSelected._id)\n                // this.placeSelected._id &&\n                // this.scaleStable\n            ) {\n                const Harvest = this.$FeathersVuex.api.Harvest\n                const entry = new Harvest({\n                    crate: this.crateSelected,\n                    crop: this.cropSelected,\n                    place: this.placeSelected,\n                    crateTareWeight: this.crateSelected.tareWeight,\n                    cropText: this.cropSelected.text,\n                    placeText: this.placeSelected.text,\n                    weight: this.currentWeight,\n                    scaleUnit: this.scaleUnit,\n                    createdAt: new Date()\n                })\n                entry.save()\n            } else {\n                this.$q.notify({\n                    color: 'negative',\n                    message: 'Please Check that all requirements are filled.',\n                    icon: 'report_problem'\n                })\n            }\n\n            console.groupEnd()\n        }\n    },\n    computed: {\n        currentWeight: {\n            // getter\n            get: function () {\n                let result = this.totalWeight\n                if (result && !isNaN(result)) {\n                    if (\n                        this.crateSelected &&\n                        this.crateSelected.tareWeight\n                    ) {\n                        result -= this.crateSelected.tareWeight\n                        result = result.toFixed(2)\n                    }\n                } else {\n                    result = 0.0\n                }\n                // force float\n                // result = result * 1.0\n                return result\n            },\n            // setter\n            set: function (newValue) {\n                // console.log('newValue', newValue)\n                let result = parseFloat(newValue)\n                if (\n                    this.crateSelected &&\n                    this.crateSelected.tareWeight\n                ) {\n                    result += this.crateSelected.tareWeight\n                    result = result.toFixed(2)\n                }\n                this.totalWeight = result\n            }\n        },\n        ...mapBind('localconfig', [\n            'btnSize',\n            'btnSpace',\n            'crateSelected',\n            'cropSelected',\n            'placeSelected',\n            'totalWeight',\n            'scaleStable',\n            'scaleUnit'\n        ]),\n        // ]),\n        harvestParams () {\n            return {\n                query: {\n                    $limit: 20,\n                    $sort: {\n                        createdAt: -1\n                    }\n                }\n            }\n        },\n        // btnStyle: function () {\n        //     return {\n        //         width: '100%',\n        //         height: '100%'\n        //     }\n        // },\n        lang: function () {\n            // return this.$i18n.locale\n            let result = this.$q.lang.isoName\n            if (!result) {\n                result = 'de'\n            }\n            return result\n        }\n    },\n    mixins: [\n        makeFindMixin({ service: 'harvest' })\n    ],\n    components: {\n        keypad\n        // DebugSection\n    }\n}\n</script>\n\n<style scoped>\n.weight_display {\n    font-size: 16em;\n}\n/* all other styles are in the global space - otherwise they do not work! */\n</style>\n"],"sourceRoot":""}